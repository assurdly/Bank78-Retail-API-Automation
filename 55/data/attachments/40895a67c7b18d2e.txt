pm.test("Response status code is 400", function () {
    pm.response.to.have.status(400);
});

pm.test("Response structure and properties for 400", function () {
    pm.expect(pm.response.json()).to.have.property("hasResult", false);
    pm.expect(pm.response.json()).to.have.property("result", null);
    pm.expect(pm.response.json()).to.have.property("resultType", 2);
    pm.expect(pm.response.json()).to.have.property("message", "Invalid Account");
    pm.expect(pm.response.json()).to.have.property("validationMessages");
    pm.expect(pm.response.json()).to.have.property("successful", false);
    pm.expect(pm.response.json()).to.have.property("errorCode", 0);
    pm.expect(pm.response.json()).to.have.property("responseCode", "07");
});

pm.test("Error message matches the expected value for 400", function () {
    pm.expect(pm.response.json().message).to.equal("Invalid Account");
});



