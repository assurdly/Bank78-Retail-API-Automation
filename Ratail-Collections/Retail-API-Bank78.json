{
	"info": {
		"_postman_id": "d05ef96e-dbbb-4f5f-a5f0-8b6c21e9c084",
		"name": "Retail APIs - QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Access token is present in the response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token).to.exist;\r",
									"});\r",
									"\r",
									"pm.test(\"Access token is a non-empty string\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Set access token as an environmental variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"customer_access_token\", jsonData.access_token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8f3c95d8-46d1-4054-b24c-9eaf80a9da11",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "grant_type can either be password, client_credentials or refresh_token",
									"key": "grant_type",
									"value": "password"
								},
								{
									"description": "username= test1860@mailinator.com, test6900, {{latest_cust_email}}",
									"key": "username",
									"value": "test8033@mailinator.com"
								},
								{
									"description": "password",
									"key": "password",
									"value": "Tested@0980"
								},
								{
									"description": "client_id",
									"key": "client_id",
									"value": "ECBEECBC7CE5434DBA509B9375203EC1"
								},
								{
									"description": "client_secret",
									"key": "client_secret",
									"value": "E166C7F9E6EA4D899A499EE239FCD930"
								}
							]
						},
						"url": "{{baseUrl}}/identity/connect/token",
						"description": "Get Auth Token"
					},
					"response": [
						{
							"id": "33ca1bc3-4820-47bc-8142-43b3e215aa73",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "<string>"
										},
										{
											"description": "username",
											"key": "username",
											"value": "<string>"
										},
										{
											"description": "password",
											"key": "password",
											"value": "<string>"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "<string>"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "<string>"
										}
									]
								},
								"url": "{{baseUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Login - Wrong Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400, \"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"error message is 'unauthorized client'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.exist.and.to.eql(\"unauthorized_client\");\r",
									"});\r",
									"\r",
									"pm.test(\"error description is accurate\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error_description).to.be.a('string').and.to.eql(\"Invalid Username or password\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2c79adeb-a851-4978-a2e4-2263c9e3703d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "grant_type can either be password, client_credentials or refresh_token",
									"key": "grant_type",
									"value": "password"
								},
								{
									"description": "username= test1860@mailinator.com, test6900, {{latest_cust_email}}",
									"key": "username",
									"value": "test8033@mailinator.com"
								},
								{
									"description": "password",
									"key": "password",
									"value": "Tested@098"
								},
								{
									"description": "client_id",
									"key": "client_id",
									"value": "ECBEECBC7CE5434DBA509B9375203EC1"
								},
								{
									"description": "client_secret",
									"key": "client_secret",
									"value": "E166C7F9E6EA4D899A499EE239FCD930"
								}
							]
						},
						"url": "{{baseUrl}}/identity/connect/token",
						"description": "Get Auth Token"
					},
					"response": [
						{
							"id": "a9288ac0-3251-4885-b86b-be0573fd8b16",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "<string>"
										},
										{
											"description": "username",
											"key": "username",
											"value": "<string>"
										},
										{
											"description": "password",
											"key": "password",
											"value": "<string>"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "<string>"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "<string>"
										}
									]
								},
								"url": "{{baseUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "fb8bac33-df1f-4a52-b5db-07f9d12cd384"
		},
		{
			"name": "Onboarding",
			"item": [
				{
					"name": "Sign Up",
					"item": [
						{
							"name": "Login Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is present in the response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is a non-empty string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.ecollectionVariables.set(\"Onboarding_access_token\", jsonData.access_token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a1f35979-47cb-4cb5-9abc-15e4b2096dd1",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "b6429e8b-eb3a-492e-a266-67357ecfa47f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username= test1860@mailinator.com, test6900, {{latest_cust_email}}",
											"key": "username",
											"value": "test8033@mailinator.com",
											"disabled": true
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980",
											"disabled": true
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "bc1d10c7-719d-4c29-9a8f-1438ed4ed087",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c032496-4db5-4aae-8635-b8f897afd427",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Result - Response has required fields\", function () {\r",
											"    pm.expect(responseData.result.firstName).to.be.a('string');\r",
											"    pm.expect(responseData.result.lastName).to.be.a('string');\r",
											"    pm.expect(responseData.result.userName).to.exist;\r",
											"    pm.expect(responseData.result.email).to.exist;\r",
											"    pm.expect(responseData.result.phoneNumber).to.be.a('string');\r",
											"    pm.expect(responseData.result.phoneNumberCountryCode).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response contains hasResult\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"First name is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.firstName).to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set(\"firstname\", responseData.result.firstName);\r",
											"\r",
											"pm.test(\"lastName is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.lastName).to.have.lengthOf.at.least(1, \"lastName should not be empty\");\r",
											"});\r",
											"\r",
											"pm.test(\"userName is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.userName).to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set(\"userName\", responseData.result.userName);\r",
											"\r",
											"pm.test(\"Email is in a valid format\", function () {\r",
											"    pm.expect(responseData.result.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"pm.test(\"Phone number has a valid length\", function () {\r",
											"    pm.expect(responseData.result.phoneNumber).to.have.lengthOf(10);\r",
											"});\r",
											"\r",
											"pm.test(\"countryCode is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.countryCode).to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is a number and has a value of 4\", function () {\r",
											"    pm.expect(responseData.resultType).to.equal(4);\r",
											"});\r",
											"\r",
											"pm.test(\"message is success\", function () {\r",
											"    pm.expect(responseData.message).to.equal('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Successful\", function () {\r",
											"    pm.expect(responseData.successful).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e090e7b7-f28f-4fb4-a760-1c7e1e1d2295",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3a761e99-ed59-4093-88cc-ea78144d2fbb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc5MENDM0RBMkI1QkI1NjBEQTRGNjJGMkZFOTA2RUNDIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE3MDI0NzY1OTMsImV4cCI6MTcwMjQ4MDE5MywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IkVDQkVFQ0JDN0NFNTQzNERCQTUwOUI5Mzc1MjAzRUMxIiwianRpIjoiOTM5NDFCMkYzRjhGQjQ2ODY5RTAzRUFBREM2NDAyRkIiLCJpYXQiOjE3MDI0NzY1OTMsInNjb3BlIjpbImFwaTEiXX0.RdPqr9v0AtHmhUj5_tj5ccVP_daEJIIL174MBRm7UEGkMMFBq6EWON22Dm4FAymVxSK0ZtioJqWGBLZlJkSv5UiL8xsTTMCtmKOQ1Eg997wAkQ1MGCjhnLevZUzfl9Milggr817xCH5ECkglAWmLFZmB8LCDOK006_VolNUoKpwPt5T7NuCt7YvhdhRih44Ii8FCkXRn3a-ouLbySNlMaI2IwYBtuCaZn8fqrybMAbGch3gBIjn91YZmJZyIat2fPCx-ekKV4_tmn9G3JcUjS-axriURB9siOGbzI04iH-spoqIYciQ0d4Zf9IOHp9ftPOXc6fHgIfofqD_JjC8Jvw"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "84478d11-9a36-450a-a72d-fa5a57178846",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Numbers in name field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33fc8487-cbf2-43d8-bb43-5fc9718c34b2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Result - Response has required fields\", function () {\r",
											"    pm.expect(responseData.result.firstName).to.be.a('string');\r",
											"    pm.expect(responseData.result.lastName).to.be.a('string');\r",
											"    pm.expect(responseData.result.userName).to.exist;\r",
											"    pm.expect(responseData.result.email).to.exist;\r",
											"    pm.expect(responseData.result.phoneNumber).to.be.a('string');\r",
											"    pm.expect(responseData.result.phoneNumberCountryCode).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response contains hasResult\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"First name is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.firstName).to.have.lengthOf.at.least(2, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set(\"firstname\", responseData.result.firstName);\r",
											"\r",
											"pm.test(\"lastName is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.lastName).to.have.lengthOf.at.least(2, \"lastName should not be empty\");\r",
											"});\r",
											"\r",
											"pm.test(\"userName is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.userName).to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set(\"userName\", responseData.result.userName);\r",
											"\r",
											"pm.test(\"Email is in a valid format\", function () {\r",
											"    pm.expect(responseData.result.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"\r",
											"// pm.test(\"Phone number is in a valid format\", function () {\r",
											"//     pm.expect(responseData.result.phoneNumber).to.match(/^\\+\\d{1,3}-\\d{1,14}$/);\r",
											"// });\r",
											"\r",
											"pm.test(\"Phone number has a valid length\", function () {\r",
											"    pm.expect(responseData.result.phoneNumber).to.have.lengthOf(10);\r",
											"});\r",
											"\r",
											"pm.test(\"countryCode is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.countryCode).to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is a number and has a value of 0\", function () {\r",
											"    pm.expect(responseData.resultType).to.equal('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"message is success\", function () {\r",
											"    pm.expect(responseData.message).to.equal('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(true);\r",
											"});\r",
											"// pm.environment.set(\"latest_cust_email\", responseData.result.email);\r",
											"\r",
											"\r",
											"\r",
											"/*pm.test(\"Check that the response has a 'result' object with specific properties\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('result').that.is.an('object');\r",
											"    pm.expect(jsonData.data).to.have.property('firstName');\r",
											"    pm.expect(jsonData.data).to.have.property('lastName');\r",
											"    pm.expect(jsonData.data).to.have.property('userName');\r",
											"    pm.expect(jsonData.data).to.have.property('email');\r",
											"   \r",
											"});\r",
											"*/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "466152f7-e298-44e4-9706-acb391230720",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8463a132-e368-4e80-9df7-4349bfeebc2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"1234\",\n  \"lastName\": \"1234\",\n  \"userName\": \"{{cust_email}}\",\n  \"email\": \"{{cust_email}}\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"referralCode\": \"ABC123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"Tested@0980\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "ef0a4a71-14d6-4a5d-9472-36bd19bd18af",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Existing Phone No",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response body contains validationMessages\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"This phone number already exists\");\r",
											"});\r",
											"\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f9e9af0c-6f3d-43de-8983-6ea0dc6046fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"userName\": \"{{cust_email}}\",\n  \"email\": \"{{cust_email}}\",\n  \"phoneNumber\": \"8067447753\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"referralCode\": \"ABC123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"Tested@0980\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "83569b96-7dfc-4967-967a-9e6bd1a6e44f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Existing username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response body contains validationMessages\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"This phone number already exists\");\r",
											"});\r",
											"\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a42fc5d3-5f3f-48d3-94ea-34210ecd27bf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"userName\": \"test5289@mailinator.com\",\n  \"email\": \"{{cust_email}}\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"referralCode\": \"ABC123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"Tested@0980\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "8255c939-0e3d-4d5d-933e-ae79e2e2908c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Names/CharacterCheck/<2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a resultType property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "69a2cfa2-0d0f-4aed-96a1-6041905b512f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"A\",\n  \"lastName\": \"C\",\n  \"userName\": \"{{cust_email}}\",\n  \"email\": \"{{cust_email}}\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"referralCode\": \"ABC123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"Tested@0980\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "9b1a94cf-987d-402c-9c37-ef3b406ee9fc",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Referralcode/caseSensitive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"First name is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.firstName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"lastName is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('object');\r",
											"    pm.expect(responseData.result.lastName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"lastName should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"userName is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.userName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.email).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.result.phoneNumber).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.result.countryCode).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Email is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Phone number is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.phoneNumber).to.match(/^\\d+$/);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"countryCode is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.countryCode).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Assert resultType is 'Success'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.equal(\"Success\");\r",
											"});\r",
											"\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"latest_cust_email\", responseData.result.email);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ce6aef69-9167-4204-84e2-dc44a93b6915",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"userName\": \"{{cust_email}}\",\n  \"email\": \"{{cust_email}}\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"referralCode\": \"abc123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"Tested@0980\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "4f0ca0a5-37c0-401d-a371-729c52e8a16c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Blank username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"  var jsonData = pm.response.json();\r",
											"  pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify email cannot be duplicated\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql( \"Please Provide Customer Email\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6348a779-3613-44c7-8435-5af4e6ac83ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"userName\": \"\",\n  \"email\": \"{{cust_email}}\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"referralCode\": \"ABC123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"Tested@0980\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "c4f0e2fd-6ede-46e0-b6c2-8b58f48160e3",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Invalid Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains message\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Response has validation errors\");\r",
											"});\r",
											"pm.test(\"verify password character combinations\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"Password must contain a number\",\r",
											"        \"Password must include Upper Case Character\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"/*pm.test(\"First name is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.firstName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"lastName is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('object');\r",
											"    pm.expect(responseData.result.lastName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"lastName should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"userName is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.userName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.email).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.result.phoneNumber).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.result.countryCode).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Email is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Phone number is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.phoneNumber).to.match(/^\\+\\d{1,3}-\\d{1,14}$/);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"countryCode is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.countryCode).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"resultType is a number and has a value of 0\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.equal(0);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"latest_cust_email\", responseData.result.email);\r",
											"*/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0b02ba4d-0dae-4b36-8792-2f82df016965",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"userName\": \"{{cust_email}}\",\n  \"email\": \"{{cust_email}}\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"referralCode\": \"ABC123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"ajenifujaajayimopelola\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "1e243e2b-79f7-4abe-9128-13ab0865ff8e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Invalid countrycode",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"pm.test(\"verify reponse contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Error\");\r",
											"});\r",
											"pm.test(\"verify reponse contains message\", function () {\r",
											"    pm.expect(pm.response.text()).to.include( \"Error in Saving User \");\r",
											"});\r",
											"pm.test(\"verify reponse contains validationMessage\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "80e9a7c3-4249-44b2-b3e7-8ddb02fbc64e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"userName\": \"{{cust_email}}\",\n  \"email\": \"{{cust_email}}\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"++234\",\n  \"referralCode\": \"ABC123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"Tested@0980\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "39950e7d-cc21-4af0-b9a2-ebc9f1571f43",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - All blank field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains message\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Response has validation errors\");\r",
											"});\r",
											"pm.test(\"verify password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"'First Name' must not be empty.\",\"'Last Name' must not be empty.\",\r",
											"        \"'Password' must not be empty.\",\r",
											"        \"Password must contain contain a number\",\r",
											"        \"Password must include Upper Case Character\",\r",
											"        \"Password must include Lower Case Character\",\r",
											"        \"Password must be mimumum of 8 Characters\",\r",
											"        \"Password must be Special Characters\",\r",
											"        \"'Country Code' must not be empty.\",\r",
											"        \"'Phone Number' must not be empty.\",\r",
											"        \"Phone Number must be 10 digits\",\r",
											"        \"'Phone Number Country Code' must not be empty.\",\r",
											"        \"'Email' must not be empty.\",\r",
											"        \"Please Provide Customer Email\",\r",
											"        \"'Email' is not a valid email address.\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "448f8650-1a43-436d-92c7-661e016f631a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"userName\": \"\",\n  \"email\": \"\",\n  \"phoneNumber\": \"\",\n  \"phoneNumberCountryCode\": \"\",\n  \"referralCode\": \"\",\n  \"countryCode\": \"\",\n  \"password\": \"\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "a2c86d63-545e-4a43-be31-999f6d75f042",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Existing email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"  var jsonData = pm.response.json();\r",
											"  pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify email cannot be duplicated\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"This email already exists\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1eb8a1c1-bc94-427a-b1f1-591c1e71831f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"userName\": \"{{cust_email}}\",\n  \"email\": \"test1783@mailinator.com\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"referralCode\": \"ABC123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"Tested@0980\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "758076a1-9e6a-441e-989e-06fd58e971d0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Blank password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an object with properties\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('hasResult');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('result');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('resultType');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('message');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('validationMessages');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('successful');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is of type boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"resultType property is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"message property is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages property is an array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is of type boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"cust_email\",email)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e9b90284-a8c3-4ce3-b4ea-38fc281a7b25",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"userName\": \"{{cust_email}}\",\n  \"email\": \"{{cust_email}}\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"referralCode\": \"ABC123\",\n  \"countryCode\": \"NG\",\n  \"password\": \"\",\n    \"otp\": \"\"\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=person",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "person"
										}
									]
								}
							},
							"response": [
								{
									"id": "8fd28849-4634-45b3-ae7c-1745d25291dd",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "89cb3958-e63f-4319-9631-c4a49fb616a4"
				},
				{
					"name": "Verify Email",
					"item": [
						{
							"name": "Verify email - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95697624-bf87-4136-b7d0-add3d73b1561",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"firstName is correct\", function () {\r",
											"    pm.expect(responseData.result.firstName).to.eq(pm.collectionVariables.get(\"firstname\"));\r",
											"});\r",
											"\r",
											"pm.test(\"lastName is a string\", function () {\r",
											"    pm.expect(responseData.result.lastName).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"userName is correct\", function () {\r",
											"    pm.expect(responseData.result.userName).to.eq(pm.collectionVariables.get(\"userName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Email is a valid email format\", function () {\r",
											"    pm.expect(responseData.result.email).to.exist.and.to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"// pm.test(\"Phone number is a valid phone number format\", function () {\r",
											"//     const responseData = pm.response.json();\r",
											"//     pm.expect(responseData.result.phoneNumber).to.match(/^\\+\\d{1,3}-\\d{6,14}$/);\r",
											"// });\r",
											"\r",
											"pm.test(\"Phone number is a valid phone number format\", function () {\r",
											"    pm.expect(responseData.result.phoneNumber).to.have.lengthOf(10);\r",
											"});\r",
											"\r",
											"pm.test(\"phoneNumberCountryCode should be a string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.result.phoneNumberCountryCode).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"referralCode should be a string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.result.referralCode).to.be.a('string');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "88315584-aede-42c1-8e3f-6c9b052b6d43",
										"exec": [
											"// pm.collectionVariables.set(\"username\", pm.environment.get(\"cust_email\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9cad6c96-4daa-45d1-86a5-f4c3c240c141",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"{{userName}}\", \n  \"otp\": \"077045\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "a0ea8f29-d532-478f-89df-bc078b6f1b2c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify email - Unregistered email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9cdb8880-fd67-465b-8288-8ec9ee3d3759",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body hasResult-false\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body resultType-ValidationError\", function () {\r",
											"    pm.expect(responseData.resultType).to.eql('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body message-Response has validation errors\", function () {\r",
											"    pm.expect(responseData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body validationMessages\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eql(\"Unable to find user email in the System\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b2c58061-264e-4670-9c7e-73ab6072c1de",
										"exec": [
											"// pm.collectionVariables.set(\"username\", pm.environment.get(\"cust_email\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0c480419-b0ec-4bd3-be57-1c4f101125e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"ab@bn.mn\", \n  \"otp\": \"163155\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "2cfabdc4-ed7d-47c6-bba8-a9bd732e306b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify email - Blank email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7d3f732-383d-439d-8280-c4e069334939",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body hasResult-false\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body resultType-ValidationError\", function () {\r",
											"    pm.expect(responseData.resultType).to.eql('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body message-Response has validation errors\", function () {\r",
											"    pm.expect(responseData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body validationMessages\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eql(\"'User Name' must not be empty.\");\r",
											"    pm.expect(responseData.validationMessages[1]).to.eql(\"Unable to find user email in the System\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a6280885-e8b0-4a18-94b3-38f6a9a101fc",
										"exec": [
											"pm.collectionVariables.set(\"username\", pm.environment.get(\"cust_email\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b6ed6c6d-5155-49cc-ad36-8a8d9b037d31",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"\", \n  \"otp\": \"254876\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "a7b5ec70-3937-492f-98f2-c8c1d839b6f5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify email - Invalid OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95697624-bf87-4136-b7d0-add3d73b1561",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body hasResult-false\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body resultType-Error\", function () {\r",
											"    pm.expect(responseData.resultType).to.eql('Error');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body message-Invalid OTP\", function () {\r",
											"    pm.expect(responseData.message).to.eql('Invalid OTP');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9b82ef6b-8038-4caf-b4c6-d6b407856975",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"{{userName}}\", \n  \"otp\": \"qwec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "a10a2aee-8f58-4703-9226-f3a178c4eac0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify email - Blank OTP field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95697624-bf87-4136-b7d0-add3d73b1561",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body hasResult-false\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body resultType-ValidationError\", function () {\r",
											"    pm.expect(responseData.resultType).to.eql('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body message-Response has validation errors\", function () {\r",
											"    pm.expect(responseData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body validationMessages\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eql(\"'Otp' must not be empty.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "40bda2b3-75fc-48a8-8e30-cb8019d1ead2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"{{userName}}\", \n  \"otp\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "8b5d5955-ffd5-4926-ae41-c685488a3498",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "7e2fac46-86b4-4137-a906-27a3be70db93"
				},
				{
					"name": "Sign In",
					"item": [
						{
							"name": "Signin - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56780d2f-6ec1-43f8-853c-f55d481d8b9b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"    pm.expect(jsonData.access_token).to.be.a('string');\r",
											"    pm.expect(jsonData.expires_in).to.be.an('number');\r",
											"    pm.expect(jsonData.token_type).to.be.a('string');\r",
											"    pm.expect(jsonData.refresh_token).to.be.a('string');\r",
											"    pm.expect(jsonData.scope).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"   pm.environment.set(\"customer_access_token\", jsonData.access_token);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify expires_in is 3600\", function () {\r",
											"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify token_type is Bearer\", function () {\r",
											"    pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "83aadef8-9e15-470c-bd3a-9dc36b97e16d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "{{userName}}"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "70a07417-160a-4def-9676-e85b9a15aee1",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Invalid password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9da1b221-92c5-40c6-9477-2727f1b70f05",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body required field\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.error).to.be.a('string');\r",
											"    pm.expect(jsonData.error_description).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Error is unauthorized_client\", function () {\r",
											"    pm.expect(jsonData.error).to.eql('unauthorized_client');\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is Invalid Username or password\", function () {\r",
											"    pm.expect(jsonData.error_description).to.eql('Invalid Username or password');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "abc27733-5577-409d-8b5a-8b5b0ef33e08",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "{{userName}}"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Test@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "4ecc0250-70f4-40bb-be15-15d4aa430fc4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Blank password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body required field\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.error).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Error is invalid_grant\", function () {\r",
											"    pm.expect(jsonData.error).to.eql('unauthorized_client');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "79eaaf8a-53d8-4f6b-90f9-ed26277bf53c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "{{latest_cust_email}}"
										},
										{
											"description": "password",
											"key": "password",
											"value": ""
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "e185051c-ab0b-4a8c-a6cf-a679f6cf951b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Invalid username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body required field\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.error).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Error is unauthorized_client\", function () {\r",
											"    pm.expect(jsonData.error).to.eql('unauthorized_client');\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is Invalid Username or password\", function () {\r",
											"    pm.expect(jsonData.error_description).to.eql('Invalid Username or password');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f1de8a25-7698-4fa5-a23c-71f4071f2913",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "abc@cde.com"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "d104c714-1af8-4ab1-bfe3-7009e7056080",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Blank username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body required field\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.error).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Error is invalid_grant\", function () {\r",
											"    pm.expect(jsonData.error).to.eql('invalid_grant');\r",
											"});\r",
											"\r",
											"// pm.test(\"Error message is Invalid Username or password\", function () {\r",
											"//     pm.expect(jsonData.error_description).to.eql('Invalid Username or password');\r",
											"// });\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6f87e89b-d97f-4cf5-a891-7622b5d78ba3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": ""
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "d93dbb57-5d92-4f35-b95c-7c1cc214e752",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "add1a653-5e95-4c15-90ca-54aa7779c397"
				}
			],
			"id": "35db51fe-11c2-4f68-9224-93d21c5f39da",
			"auth": {
				"type": "apikey",
				"apikey": {
					"value": "{{x-api-key}}",
					"key": "x-api-key"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9d4ff15c-3c98-4f8a-b242-ac1e832e6d92",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0611bca0-d443-48b1-8688-18c75b0191a1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "pin",
			"item": [
				{
					"name": "request-pin-otp",
					"item": [
						{
							"name": "Request PIN OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "915bbb31-2106-4e57-977d-0867b1ee3436",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.exist;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'result' field should be an object\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3fcfe2ad-9300-4ece-97d7-2553af1ba7cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2222\",\n  \"pin\": \"2222\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/request-pin-otp"
							},
							"response": [
								{
									"id": "21a9aff4-9d45-4baf-924a-cf44b09f36d1",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"7181\",\n  \"pin\": \"5013\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/request-pin-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "d062fe63-dedd-4e2b-ab26-d7bcfa0bfa5b"
				},
				{
					"name": "Verify-otp",
					"item": [
						{
							"name": "Verify OTP - Valid OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "855f89f2-3aeb-4aaf-a13f-d9bb67410f55",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											" const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"The 'result' field should be an object\", function () {\r",
											"    pm.expect(responseData.result.message).to.be.a('string');\r",
											"    pm.expect(responseData.result.message).to.eq('PIN OTP Verified Successfuly');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(true);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "730964f1-118b-4889-a627-821e37870c9d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"208516\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-otp"
							},
							"response": [
								{
									"id": "64af9a60-79e6-4bb8-841d-280829c16b7f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"otp\": \"381557\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify OTP - Invalid OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "855f89f2-3aeb-4aaf-a13f-d9bb67410f55",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Invalid OTP\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "90bb56ed-18a6-4701-8114-272df763feca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"208516\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-otp"
							},
							"response": [
								{
									"id": "055bb236-c7ce-4539-8dba-60fb1b6511be",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"otp\": \"381557\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify OTP - Blank OTP field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "855f89f2-3aeb-4aaf-a13f-d9bb67410f55",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.be.an('array');\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"The validationMessages field is present\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eq(\"The OTP field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5ff6485c-fc19-4be6-a101-96aaf792e211",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-otp"
							},
							"response": [
								{
									"id": "ec6ecaac-8837-4873-94d4-e042f2bbdeff",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"otp\": \"381557\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "f8a22507-c869-4f5e-8d74-9ec3c3760e90"
				},
				{
					"name": "create-pin",
					"item": [
						{
							"name": "Create Pin - Mismatched PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0090914f-b497-44bb-a634-346ddf6a9145",
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Pin and confirm pin don't match\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e958b772-3122-4a7e-8a55-0d99b1488137",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6383\",\n  \"otp\": \"710071\",\n  \"pin\": \"6123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/create-pin"
							},
							"response": [
								{
									"id": "a85bb6f3-4ede-4202-85d4-b5b4aeb2fab7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"8868\",\n  \"otp\": \"061967\",\n  \"pin\": \"8911\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/create-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Pin - Valid Matching PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0090914f-b497-44bb-a634-346ddf6a9145",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an(\"object\");\r",
											"    pm.expect(jsonData.result).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.result.message).to.eq(\"PIN Created Successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eql(\"Success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e50e7fdf-1b5c-4624-b5ce-f75a046dbcf2",
										"exec": [
											"// var wand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"// var PIN = wand\r",
											"// pm.environment.set(\"cust_PIN\",PIN)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c997e164-baaf-4010-bcf8-520477e603d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"8756\",\n  \"otp\": \"208516\",\n  \"pin\": \"8756\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/create-pin"
							},
							"response": [
								{
									"id": "bcac740b-eb8c-4f51-acc5-12069cffca72",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"8868\",\n  \"otp\": \"061967\",\n  \"pin\": \"8911\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/create-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Pin - Unverified OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0090914f-b497-44bb-a634-346ddf6a9145",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2b0dbb9a-954b-43d1-af2e-d34e8d9fd12f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6383\",\n  \"otp\": \"355601\",\n  \"pin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/create-pin"
							},
							"response": [
								{
									"id": "afd0223c-2ad6-4a6e-8986-448686f77186",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"8868\",\n  \"otp\": \"061967\",\n  \"pin\": \"8911\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/create-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "f586fa7d-8451-458b-a723-f4d4ea818a9f"
				},
				{
					"name": "Verify-pin",
					"item": [
						{
							"name": "Verify Pin - Valid PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44219715-e73f-4a6a-a76c-05ce830aab17",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											" const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"The 'result' field should be an object\", function () {\r",
											"    pm.expect(responseData.result.message).to.be.a('string');\r",
											"    pm.expect(responseData.result.message).to.eq('PIN Verified Successfully');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(true);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fa0dd9e8-9491-43d6-b2a3-2aa8f8079be7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pin\": \"8756\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-pin"
							},
							"response": [
								{
									"id": "565f6fc7-8938-458c-b863-77b1cea0c364",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pin\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify Pin - Invalid PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44219715-e73f-4a6a-a76c-05ce830aab17",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9b6158f4-e960-43a6-be88-523781c67269",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pin\": \"0956\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-pin"
							},
							"response": [
								{
									"id": "5378f870-c04b-44fe-b52e-5067df037cda",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pin\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify Pin - Blank PIN field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44219715-e73f-4a6a-a76c-05ce830aab17",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"The validationMessages field is present\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eq(\"The Pin field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "440a8df0-234c-4e1f-be2a-97d427b016f2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pin\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-pin"
							},
							"response": [
								{
									"id": "3bbb2cdc-e5ae-4e44-b428-9eb00827f25e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pin\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify Pin - Invalid PIN length",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44219715-e73f-4a6a-a76c-05ce830aab17",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8343eafe-f8c2-47f1-93c1-d63d874105d8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pin\": \"a34\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-pin"
							},
							"response": [
								{
									"id": "99057186-fbcc-4736-ab37-59ae6a484908",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pin\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "4d32ca59-8a89-43fb-a283-e548e0b678ee"
				},
				{
					"name": "change-pin",
					"item": [
						{
							"name": "Change PIN - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3aa5610a-7312-4d91-8b9c-e2d71af3d83e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "98d837f4-7940-44e0-a30d-ae568805c1a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"1111\",\n  \"newPin\": \"1111\",\n  \"oldPin\": \"8756\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "e71dc829-430e-445e-ada5-dfbfc007dadc",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change PIN - Old=New PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f2676f3-4d5c-4f40-9601-a301c2dda5bf",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"You can't use your previous PIN. Please use a different PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e49ee5e2-bf3a-416c-9cb6-cbcdf0398b90",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"5370\",\n  \"newPin\": \"5370\",\n  \"oldPin\": \"5370\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "b5c37ec4-208e-4157-967e-ddbdec0ddd64",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change PIN - Generic PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f2676f3-4d5c-4f40-9601-a301c2dda5bf",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Pin condition not met\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "de012767-972a-4176-84db-1e2b34420ebd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"1234\",\n  \"newPin\": \"1234\",\n  \"oldPin\": \"5370\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "5f64a4be-1d87-4811-9a93-21c0af3ce559",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change PIN - Incorrect PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f2676f3-4d5c-4f40-9601-a301c2dda5bf",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Incorrect PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b7595c4a-0610-4d64-a3b8-2d5de4570868",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"1111\",\n  \"newPin\": \"1111\",\n  \"oldPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "a5a89c4c-4d5b-4738-b919-ec7e986c7d42",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change PIN - Mismatched new PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f2676f3-4d5c-4f40-9601-a301c2dda5bf",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Pin doesnt match\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "000276c4-19a5-433b-b8dd-2966e491b566",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2229\",\n  \"newPin\": \"2222\",\n  \"oldPin\": \"1111\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "ddc6f268-7d63-426d-8afd-d2f50d30a8ab",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change PIN -Blank old PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f2676f3-4d5c-4f40-9601-a301c2dda5bf",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"The OldPin field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "aba414a7-d8c2-49c8-b89b-881d62264182",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2229\",\n  \"newPin\": \"2222\",\n  \"oldPin\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "93073c9e-991e-4c7d-9d62-6f2cfc8338d6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "194fe401-0008-4519-812b-e0b3c152c44d"
				},
				{
					"name": "forgot-pin",
					"item": [
						{
							"name": "Forgot PIN - Valid access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7702790e-2334-4916-b408-ff8438fcd196",
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a398c647-04e9-46cc-a9ab-90376d88b7b6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/identity/api/v1/users/pin/forgot-pin"
							},
							"response": [
								{
									"id": "6e1ed278-2513-4230-b3d9-10800cee9868",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/users/pin/forgot-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Forgot PIN - No access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37a2a234-94b7-49c5-90e5-1498f261131e",
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b783f50b-edd2-49f5-a2a3-fdb64696ad2a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/identity/api/v1/users/pin/forgot-pin"
							},
							"response": [
								{
									"id": "1db6c9eb-1319-481e-bb6c-7bde2e2be282",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/users/pin/forgot-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "907090f4-a8bf-48b8-9b7b-b11e8263b3ab"
				},
				{
					"name": "reset-pin",
					"item": [
						{
							"name": "Reset PIN - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6370f484-8027-4da7-824e-1feb952223d2",
										"exec": [
											"var wand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var PIN = wand\r",
											"pm.environment.set(\"cust_PIN\",PIN)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0f09d258-6ee5-4d7c-aeb6-771c4fbddd59",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2363\",\n  \"newPin\": \"2363\",\n  \"otp\": \"661857\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "c44a51ac-2df5-4f0f-b927-8d3447829d5a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Generic PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "de37820f-7713-44a1-a102-4d6e044a5a6f",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Pin condition not met\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c674a8a9-e798-4eba-916b-3709aafdbb3b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"1234\",\n  \"newPin\": \"1234\",\n  \"otp\": \"888084\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "83ea2c03-c302-43d6-92e5-f96fb43d25ff",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Blank OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"The OTP field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8569d868-d907-497f-8d00-10feeeca8eb9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6385\",\n  \"newPin\": \"6385\",\n  \"otp\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "b3b4b1b5-7366-49e2-a8e2-2cf60f3e4196",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Invalid OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"OTP can only be 6 digits\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3058f785-1296-412e-853e-13de0a585085",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6385\",\n  \"newPin\": \"6385\",\n  \"otp\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "9f0d1952-ef14-4c11-968b-6c917be7a4f6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Expired OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"OTP can only be 6 digits\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "deb8b9d9-0461-4506-8832-02d99b25b350",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6385\",\n  \"newPin\": \"6385\",\n  \"otp\": \"123456\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "6d5cca7d-da5a-45d9-9470-4a889fb2f294",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Invalid PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"PIN can only be digits with a length of 4\",\r",
											"        \"Confirm PIN can only be digits with a length of 4\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a2a8a03b-9a6e-4856-bc76-39dfd168a0fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"85\",\n  \"newPin\": \"85\",\n  \"otp\": \"750235\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "90dbbadf-74c1-4bde-b1bd-fe3d14902742",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Mismatched PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Pin and confirm pin don't match\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1756bfb8-e1c7-42c9-aa56-3cc2547a6e98",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"8501\",\n  \"newPin\": \"8500\",\n  \"otp\": \"750235\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "b89efc7e-5bdd-4447-b456-7b86582d106a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "72883be3-7e03-46ab-8a74-3018dc31ae5d"
				}
			],
			"id": "f3f7956f-1c48-45b8-9ee0-4470f4c43289"
		},
		{
			"name": "passwords",
			"item": [
				{
					"name": "resendlink",
					"item": [
						{
							"name": "Resend link - Valid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70be0b22-b417-4079-a4e8-fda21d70188e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an('object').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.result.message).to.eq(\"Password Reset link resent\");\r",
											"});\r",
											"\r",
											"// pm.test(\"Result property contains a message property\", function () {\r",
											"//     pm.expect(jsonData.result.resetTokenId).to.be.a('string');\r",
											"//     pm.expect(jsonData.result.resetTokenId).to.eq(\"Password Reset link resent\");\r",
											"// });\r",
											"\r",
											"pm.test(\"Result property contains a resetTokenId property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"   pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"   pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dd32bc52-18af-4752-9696-6d2e17905680",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{latest_cust_email}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/document/d/1cO2JYPMIDxXq7HlavaRvyxucwMVkf6WFq_C4tNergj8/edit\",\n  \"username\": \"{{userName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrli}}/v1/accounts/passwords/resendlink"
							},
							"response": [
								{
									"id": "aa0db564-deb7-4544-a184-823574f6fd7f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendlink"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resend link - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70be0b22-b417-4079-a4e8-fda21d70188e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('Email address is invalid');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "57250459-52b4-48aa-8849-6e22702912af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{latest_cust_email}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/document/d/1cO2JYPMIDxXq7HlavaRvyxucwMVkf6WFq_C4tNergj8/edit\",\n  \"username\": \"adr@fd\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrli}}/v1/accounts/passwords/resendlink"
							},
							"response": [
								{
									"id": "7105855f-128b-408d-acf4-e9a0c6303dc0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendlink"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resend link - Blank resetpasswordurl",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70be0b22-b417-4079-a4e8-fda21d70188e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response bodi is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validation is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq\r",
											"    (\"The ResetPasswordUrl field is required.\",\r",
											"        \"The ResetPasswordUrl field is not a valid fully-qualified http, https, or ftp URL.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "83f5fdbd-70b1-45d3-ba75-67ecf8f8ef08",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{latest_cust_email}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"\",\n  \"username\": \"{{userName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrli}}/v1/accounts/passwords/resendlink"
							},
							"response": [
								{
									"id": "c3cd533e-289f-4912-948f-10d54b74f5a2",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendlink"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resend link -Blank email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70be0b22-b417-4079-a4e8-fda21d70188e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The Username field is required.');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e402df8a-a9d7-4467-b2a2-fb2e24479db1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{latest_cust_email}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/document/d/1cO2JYPMIDxXq7HlavaRvyxucwMVkf6WFq_C4tNergj8/edit\",\n  \"username\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrli}}/v1/accounts/passwords/resendlink"
							},
							"response": [
								{
									"id": "66aa4e59-866e-4774-ab34-4d23b972842d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendlink"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "c8df18b7-b13d-4764-ba5b-33d50f0cb308"
				},
				{
					"name": "resendotp",
					"item": [
						{
							"name": "Resendotp - Valid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58846a7c-5f42-4de3-bd85-8c37e850c298",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an('object').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.result.message).to.eq(\"Password Reset Code sent\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a resetTokenId property\", function () {\r",
											"    pm.expect(jsonData.result.resetTokenId).to.be.a('string');\r",
											"    pm.environment.set(\"cust_resetTokenId\", jsonData.result.resetTokenId);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType us present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"   pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"   pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "46885dc4-0061-4842-9950-180e8b4efc4e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendotp"
							},
							"response": [
								{
									"id": "f6481293-3c2e-429e-8cb9-a00c6123b60f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"mMV3S.KKr.F6n+Lg0h'18ymRAK-J0YvUk8+C'hs1-je8K05HQU'BqbDP5@WS0QmoD.HNp8.1-BuXsPBfP-jN-wyT4KR0GlVK.j.c7oA-RP-6AXj-vmX.nJqJ67h\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendotp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resendotp - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58846a7c-5f42-4de3-bd85-8c37e850c298",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('Email address is invalid');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e070eae7-d982-4917-9a0f-2b282f21844b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"adv#hx\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendotp"
							},
							"response": [
								{
									"id": "2f5b53b9-b65b-4663-b29d-063bc09efcfe",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"mMV3S.KKr.F6n+Lg0h'18ymRAK-J0YvUk8+C'hs1-je8K05HQU'BqbDP5@WS0QmoD.HNp8.1-BuXsPBfP-jN-wyT4KR0GlVK.j.c7oA-RP-6AXj-vmX.nJqJ67h\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendotp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resendotp - Blank email field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58846a7c-5f42-4de3-bd85-8c37e850c298",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The Username field is required.');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b71d649a-0e4f-4800-843d-9da0a3b824bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendotp"
							},
							"response": [
								{
									"id": "de6ae045-3f31-46f1-a198-3c31b0101e80",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"mMV3S.KKr.F6n+Lg0h'18ymRAK-J0YvUk8+C'hs1-je8K05HQU'BqbDP5@WS0QmoD.HNp8.1-BuXsPBfP-jN-wyT4KR0GlVK.j.c7oA-RP-6AXj-vmX.nJqJ67h\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendotp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "dae3040d-f26e-4629-8d60-168d607a50b4"
				},
				{
					"name": "reset",
					"item": [
						{
							"name": "Reset Password - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an('object').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.result.message).to.eq(\"Password reset successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"resultType us present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"   pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"   pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b8126ea3-7012-4a91-b79b-1a5f107f0b03",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userName}}\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"{{cust_resetTokenId}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "6539d86c-2011-44f6-999a-020b2b7531e1",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Account does not exist\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2a88bd1a-3dbf-440e-8af3-971d062d8f74",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"wed@dwew\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"b954d600-d439-42a8-93e0-2c0289307cde\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "b002c3f3-71af-4f52-99ce-b562d2f85c47",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Blank email field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The Username field is required.');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "49293179-ddb2-40fb-b750-7edc4f9ee037",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"6a7ddb28-947c-4127-895f-f4904750fc8e\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "3498b56b-54d8-408e-a368-a9abf8b8c858",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Invalid reset token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present - Invalid password reset token. code is expired \", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Invalid password reset token. code is expired \");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "383784c2-c2f9-46ae-a295-4d8bb09b6c0b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userName}}\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"30c87cb1-7be2-49e5-b847-873fb46b89d5\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "fc5add0b-3c40-4cf5-b693-d81d0581578c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Blank reset token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The Code field is required.');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f1a7c472-711e-4881-ac36-b764d18ccb23",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userName}}\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "9d1024be-4102-4234-a519-276c5b405783",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Invalid password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq\r",
											"    (\"Passwords must be at least 8 characters.\",\r",
											"        \"Passwords must have at least one digit ('0'-'9').\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d1ed7cd0-e53a-4082-a0b0-47f472ddd745",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userName}}\",\n  \"password\": \"Tested@\",\n  \"confirmPassword\": \"Tested@\",\n  \"code\": \"{{cust_resetTokenId}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "605bca97-fe4a-4704-9822-54bf80eef142",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Mismatched password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Password and confirm password do not match\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3da69bd4-1ca4-4e57-8dcd-8a4fab6bebd0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userName}}\",\n  \"password\": \"Tested@\",\n  \"confirmPassword\": \"Tested@1234\",\n  \"code\": \"f9b00acf-87e5-4094-81b6-99ecd4179e75\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "2c8a4626-d9b5-4988-a472-8a2ca81a8104",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Blank password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq\r",
											"    (\"The Password field is required.\",\r",
											"        \"The ConfirmPassword field is required.\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "026eb6e9-859e-4a0f-b2e8-92cea6962639",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userName}}\",\n  \"password\": \"\",\n  \"confirmPassword\": \"\",\n  \"code\": \"68ab97ce-dc54-49fc-931a-3645df2ba49a\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "8c13835c-ae65-4dd2-b2d6-a2fdeb930b14",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "a1eed8ae-b440-4e06-aee3-a2f4f04b98ab"
				},
				{
					"name": "change",
					"item": [
						{
							"name": "Change Password - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.have.property('message');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eq('Password Changed Successfully');\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e2c28823-425e-4ce8-a746-147c67935828",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0980\",\n  \"newPassword\": \"Tested@0980\",\n  \"oldPassword\": \"Tested@0981\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "c104a419-7dc0-4cdf-8295-3e7a6cd7c844",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Incorrect old password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('Incorrect password.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7e5c30a9-46e7-4eca-b07c-a58c2f003738",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0981\",\n  \"newPassword\": \"Tested@0981\",\n  \"oldPassword\": \"Tested@0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "81c7fdc3-a2b3-4ae7-ab0c-005fcc99e662",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Mismatched password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "95458f8c-f89e-47f2-94a6-592d45532cd7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0981\",\n  \"newPassword\": \"Te@0981\",\n  \"oldPassword\": \"Tested@0981\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "531b3239-b265-4d20-b6ed-0ffcb8531f68",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Blank old password field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The OldPassword field is required.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "eeaec3bf-8d8c-4430-8317-ac8244377f92",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0981\",\n  \"newPassword\": \"Tested@0981\",\n  \"oldPassword\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "5e54eed6-550f-4654-9cdf-ecb5f1ff9f11",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Blank new password field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The NewPassword field is required.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "be03bf6b-a17d-4aed-9ec5-f1f0066a34c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0981\",\n  \"newPassword\": \"\",\n  \"oldPassword\": \"Tested@0981\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "4af7fb2f-4704-40e0-8485-c61a771c254d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Blank confirm password field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The ConfirmPassword field is required.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "31d7b12c-0890-4208-83c3-a3e79be0e28f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"\",\n  \"newPassword\": \"Tested@0981\",\n  \"oldPassword\": \"Tested@0981\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "2156cbf0-e814-4cbb-a062-76bc5763eabe",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "76f229e5-ad6a-4dc1-a6c6-cd73565fe64a"
				},
				{
					"name": "forgot",
					"item": [
						{
							"name": "Forgot Password - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95d70e6c-2015-47a2-bb37-b79955eaeea2",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a resultType property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"Email address is invalid\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a8980a6f-9d23-43d8-b9c0-c9eb11714ce9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/spreadsheets/d/1Q8d_SD6dFPWaozL7HKcbaNjV99rdlBPcorGm0VMEUuc/edit#gid=0\",\n  \"username\": \"abc@d\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/forgot"
							},
							"response": [
								{
									"id": "4e211065-b50d-407b-a5e4-c3ea651c0e8a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/forgot"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"resetTokenId\": \"<string>\"\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Forgot Password - Blank email field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95d70e6c-2015-47a2-bb37-b79955eaeea2",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a resetTokenId property\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"The Username field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is present\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "93dc669b-9137-409b-bcb7-c945a90d525b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/spreadsheets/d/1Q8d_SD6dFPWaozL7HKcbaNjV99rdlBPcorGm0VMEUuc/edit#gid=0\",\n  \"username\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/forgot"
							},
							"response": [
								{
									"id": "4ca3efac-6bc3-45f2-9647-2ec0efa606f4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/forgot"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"resetTokenId\": \"<string>\"\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Forgot Password - Blank resetpasswordurl",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95d70e6c-2015-47a2-bb37-b79955eaeea2",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response bodi is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validation is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq\r",
											"    (\"The ResetPasswordUrl field is required.\",\r",
											"        \"The ResetPasswordUrl field is not a valid fully-qualified http, https, or ftp URL.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ebaca242-7c0b-401b-b3ab-2d643204e85d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"\",\n  \"username\": \"{{userName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/forgot"
							},
							"response": [
								{
									"id": "e7936cb3-b7c6-432f-a429-48518e68cabe",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/forgot"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"resetTokenId\": \"<string>\"\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Forgot Password - Valid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0fc68154-f14f-455d-82f6-422a385fe32d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an('object').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a result message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.result.message).to.eq(\"Recovery email sent successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a resultType property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"   pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"   pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "59dbd9c7-0db0-4ed0-a6d9-a1fc87e5b5a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/spreadsheets/d/1Q8d_SD6dFPWaozL7HKcbaNjV99rdlBPcorGm0VMEUuc/edit#gid=0\",\n  \"username\": \"{{userName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/forgot"
							},
							"response": [
								{
									"id": "b17409ed-2fa6-4f50-a405-3f441f8c1917",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/forgot"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"resetTokenId\": \"<string>\"\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "386167c7-9bbf-4688-8ff9-4a5dea09201a"
				}
			],
			"id": "389a45d2-49d4-4db2-aea4-4e91ba7b140a"
		},
		{
			"name": "Bill Payment",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is present in the response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is a non-empty string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"customer_access_token\", jsonData.access_token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4db7546b-8efe-4a8a-8635-44724c7c9ee5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username= test1860@mailinator.com, test6900, {{latest_cust_email}}",
											"key": "username",
											"value": "test8033@mailinator.com"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "8bd1a0bb-84bc-467c-9dfd-c2bbf379eb66",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "b0518749-ec3a-4d93-bd88-c785cf5b5c5f"
				},
				{
					"name": "Buy Data",
					"item": [
						{
							"name": "Successful Data Purchase",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "12040e9b-2d1f-4d26-9f97-743c6d27603a",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"\r",
											"  \"amount\": \"2500\",\r",
											"  \"billId\": \"9\",\r",
											"  \"channel\": \"1\",\r",
											"  \"clientRequestId\": randomClientId,\r",
											"  \"packageId\": \"47\",\r",
											"  \"phoneNumber\": \"08185597979\",\r",
											"  \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"  \"transactionPin\": \"6383\",\r",
											"  \"narration\": \"Buy data bundle\",\r",
											"  \"saveBeneficiary\": \"True\",\r",
											"  \"deviceId\": \"pixel phone\",\r",
											"  \"beneficiaryName\": \"Bryan Ek\",\r",
											"  \"beneficiaryPhone\": \"08185597979\",\r",
											"  \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0688d75f-2490-401c-87b9-734d79858238",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is 200 for success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    \r",
											"    pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"    pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if transaction reference is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6c8bfc31-e094-477a-a0c3-e4c2d4dda1ad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "9313b245-28f2-4e56-9207-1c1d25d9da80",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2500\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"08185597979\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6380\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f9205a34-1dfa-4fd0-90f1-d8fdcd979367",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6380\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "ba9f4b6f-6ed1-4a5c-b7be-8919c73820a4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Duplicate Transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Duplicate Transaction with ref buydata1335\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1013);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01012\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says duplicate transadtion\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Duplicate Transaction with ref buydata1335\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a09efd74-e7a5-4a45-addb-d487a8a5384c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "29be736b-0725-4376-9d20-33197858b8be",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Wrong bundle amount (Less than)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message Invalid amount paid. Amount passed is lesser than the bill package amount\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Fixed package amount: Invalid amount paid. Amount passed is lesser than the bill package amount\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2499\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"08185597979\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6383\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0e4d851a-86a3-4796-9531-ede8a1c8ad6c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2499\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "47168a15-7b9e-49e7-8e05-8544e9702a0a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Wrong bundle amount (More than)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message Invalid amount paid. Amount passed is lesser than the bill package amount\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Fixed package amount: Invalid amount paid. Amount passed is lesser than the bill package amount\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2600\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"08185597979\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6383\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "61ae5942-b3f5-4786-a9a4-6eaf5d0908ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2550\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "e1eba4dd-52f2-48b0-b4af-e492af00c111",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says Phone number can only be digits with a length of 11 \", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Phone number can only be digits with a length of 11\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2500\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"0818559797i\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6383\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9c4cd860-146d-44ee-bfa4-3888154c7a35",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "ee0acdac-049c-47de-b005-e79d4562056a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid beneficiary phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says Phone number can only be digits with a length of 11 \", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Phone number can only be digits with a length of 11\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"\r",
											"  \"amount\": \"2500\",\r",
											"  \"billId\": \"9\",\r",
											"  \"channel\": \"1\",\r",
											"  \"clientRequestId\": randomClientId,\r",
											"  \"packageId\": \"47\",\r",
											"  \"phoneNumber\": \"0818559797i\",\r",
											"  \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"  \"transactionPin\": \"6383\",\r",
											"  \"narration\": \"Buy data bundle\",\r",
											"  \"saveBeneficiary\": \"True\",\r",
											"  \"deviceId\": \"pixel phone\",\r",
											"  \"beneficiaryName\": \"Bryan Ek\",\r",
											"  \"beneficiaryPhone\": \"08185597979\",\r",
											"  \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "21b7bb36-424b-48e9-8e19-528d19815753",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "21c58b5d-fa25-448d-bc5e-f143757409e5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "aa192337-acba-4ef9-93ce-8d9cbb57bff6"
				},
				{
					"name": "Buy Electricity tokens",
					"item": [
						{
							"name": "Successful prepaid token purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Check if billToken is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    // Check if the \"billToken\" field exists in the response\r",
											"    pm.expect(responseBody.result.billToken).to.not.be.undefined;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"The 'reference' field is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.reference).to.be.a('string').and.to.have.lengthOf.at.least(1, \"'reference' field should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"123456695049\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6383\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2c393ea0-456e-4a57-b055-ba8bf65bf278",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": {{sourceAccount}},\n  \"transactionPin\": \"6383\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "21e2557b-2356-4d90-a430-90a3a0def9f4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Successful prepaid token purchase with negative amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
											"    pm.expect(jsonData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 3\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('Kindly specify an amount greater than 0');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"123456695049\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6383\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "20370483-921a-4947-86fe-e936ee971872",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": {{sourceAccount}},\n  \"transactionPin\": \"6383\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "dffccebf-5bef-4eba-ab38-e85b5d6b42b5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Successful post paid purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Check if billToken is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    // Check if the \"billToken\" field exists in the response\r",
											"    pm.expect(responseBody.result.billToken).to.not.be.undefined;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"The 'reference' field is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.reference).to.be.a('string').and.to.have.lengthOf.at.least(1, \"'reference' field should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"1000\",\r",
											"    \"billId\": \"28\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"meterNumber\": \"123456695049\",\r",
											"    \"packageId\": \"105\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"buy elec\",\r",
											"    \"saveBeneficiary\": \"false\",\r",
											"    \"deviceId\": \"meter1\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"08185597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1b750b15-e971-4bc8-a986-0768609a76d9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "9a61d83d-8ff5-42bd-ab29-a756810b630c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"123456695049\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6385\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "beccae71-136b-4b28-b8ee-a85d9c997735",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6303\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "1c6e14db-1826-4a43-ae2c-6757029c984a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Blank meter number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says The MeterNumber field is required\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"The MeterNumber field is required.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6383\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ed84b997-bbef-46e5-bc64-a77087d0bc95",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "0020b130-54a7-4a08-8871-13a29d88f204",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid meter number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says The MeterNumber field is required\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"The MeterNumber field is required.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6383\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "aa948137-5131-40f9-9129-955046a99329",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"sdfgre\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "f53f7e39-62f7-4888-b7a4-ea12c3b08d0e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Duplicate transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Duplicate Transaction with ref buyelect\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1013);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01012\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says duplicate transadtion\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Duplicate Transaction with ref buyelect\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "de9f08b3-5fbb-4803-b981-872878c466c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buyelect\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "3966b462-695f-47eb-9f91-20db76707822",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "745b5212-bd6b-4d28-8eb7-79885388b5f9"
				},
				{
					"name": "Buy Cable package",
					"item": [
						{
							"name": "Successful cable bundle purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is 200 for success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    \r",
											"    pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"    pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if transaction reference is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"7200\",\r",
											"    \"billId\": \"6\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"decoder\": \"123445678890\",\r",
											"    \"packageId\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"Buy Cable bundle\",\r",
											"    \"saveBeneficiary\": \"false\",\r",
											"    \"deviceId\": \"xphone\",\r",
											"    \"beneficiaryName\": \"Paul\",\r",
											"    \"beneficiaryPhone\": \"08185597979\",\r",
											"    \"beneficiaryEmail\": \"12345\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f035f8dc-806a-47a2-b287-3bae5216964c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"payforcabletv123\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "5157fed6-89be-42e0-9867-83e455df335d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"7200\",\r",
											"    \"billId\": \"6\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"decoder\": \"123445678890\",\r",
											"    \"packageId\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6389\",\r",
											"    \"narration\": \"Buy Cable bundle\",\r",
											"    \"saveBeneficiary\": \"false\",\r",
											"    \"deviceId\": \"xphone\",\r",
											"    \"beneficiaryName\": \"Paul\",\r",
											"    \"beneficiaryPhone\": \"08185597979\",\r",
											"    \"beneficiaryEmail\": \"12345\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cfabccd3-ec26-4f98-8cff-57ff8e061039",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"payforcabletv123\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "d445c475-09e4-4708-8607-837e441e8bf6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Duplicate transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Duplicate Transaction with ref buycable\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1013);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01012\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says duplicate transadtion\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Duplicate Transaction with ref buycable\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d4d5928a-c453-427b-a2ee-0b513b161b2e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buycable\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"1\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "6eac6614-fba2-4312-9c9d-5ed473a3cf33",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "No decoder number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says decoder field is required\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"The Decoder field is required.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"7200\",\r",
											"    \"billId\": \"6\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"decoder\": \"\",\r",
											"    \"packageId\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6389\",\r",
											"    \"narration\": \"Buy Cable bundle\",\r",
											"    \"saveBeneficiary\": \"false\",\r",
											"    \"deviceId\": \"xphone\",\r",
											"    \"beneficiaryName\": \"Paul\",\r",
											"    \"beneficiaryPhone\": \"08185597979\",\r",
											"    \"beneficiaryEmail\": \"12345\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4db8a252-ff84-403c-8c68-f9c434b1ddc9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"payforcabletv123\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "6843b6ba-39bb-457f-bca4-1e6ae1b215f3",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Wrong bundle amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message Invalid amount paid. Amount passed is lesser than the bill package amount\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Fixed package amount: Invalid amount paid. Amount passed is lesser than the bill package amount\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"720\",\r",
											"    \"billId\": \"6\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"decoder\": \"123445678890\",\r",
											"    \"packageId\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6389\",\r",
											"    \"narration\": \"Buy Cable bundle\",\r",
											"    \"saveBeneficiary\": \"false\",\r",
											"    \"deviceId\": \"xphone\",\r",
											"    \"beneficiaryName\": \"Paul\",\r",
											"    \"beneficiaryPhone\": \"08185597979\",\r",
											"    \"beneficiaryEmail\": \"12345\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "228d5f66-f2c7-49b2-8a14-b2101c1b3d0e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"payforcabletv123\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "3457ae9d-1aca-44cc-84b5-3c11a1d4f0a4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "4355371c-6429-4f14-bf6e-0cb544c0af26"
				},
				{
					"name": "Buy Educational content",
					"item": [
						{
							"name": "Successful epin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is 200 for success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    \r",
											"    pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"    pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if transaction reference is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "204d79a3-669b-4699-abf9-ef23a0d7e42a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Pay Epin\",\n  \"channel\": \"3\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"1284903\",\n  \"beneficiaryName\": \"Jamb\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"test8033@mailinator.com\",\n  \"billId\": \"30\",\n  \"packageId\": \"109\",\n  \"amount\": \"4700\",\n  \"numberOfPins\": \"1\",\n  \"product_code\": \"DE\",  \n  \"phone\" : \"07035361770\",\n  \"agentReference\" : \"10000306543008\",\n  \"service_type\" : \"jamb\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/education-pins"
							},
							"response": [
								{
									"id": "6b8733e3-a812-4137-b0b4-fffa16502028",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "7520538a-1d8f-4301-bde6-7b75b4ff89b9"
				},
				{
					"name": "Schedule bill",
					"item": [],
					"id": "545e1ff1-2738-4960-a85c-1431a19acda3"
				},
				{
					"name": "Bet Funding",
					"item": [
						{
							"name": "Successful Bet Account Funding",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"100\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d454bb66-bf48-485e-b4f8-b3cdf48080df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "1549ddf1-b173-4e5c-91e6-749538ba6558",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Bet Account Funding with negative amount",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"100\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c4d12c9e-9646-4534-9500-feadc0883f5f",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "54527a4f-d6e0-4399-b106-c75fd9c78325",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"-100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "641a6fb1-ba35-44f6-8a9e-2291601857d8",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6385\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"100\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "80c6e65b-b180-4216-9157-3d2604167548",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a39f1a32-32fd-439b-b703-b8e0994d6d5c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "6624c7d1-be94-4899-8abf-26fea9637d62",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Amount (-Negative Value)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"-500\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "907721f5-f36f-407b-b310-4e2303a48b96",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says Kindly specify an amount greater than 0\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Kindly specify an amount greater than 0\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8290aa29-39ad-40fa-8091-ae0b0c6252a7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "ceefbb4e-4d3a-4a83-b6a6-b63c5e3996c7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account Number",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"1010000rhh\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"100\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "79a55630-1d68-442c-9354-4f0174cf39a6",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Source Account:  The wallet you have specified does not exist\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\",  \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Source Account:  The wallet you have specified does not exist\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4fde9fa3-d78a-4825-b77b-b6495333d642",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "d1c2ff04-bf2c-4723-92e1-8fa68beaae94",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account Number Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"1010000rhh\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"100\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "79a55630-1d68-442c-9354-4f0174cf39a6",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Source Account:  The wallet you have specified does not exist\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\",  \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Source Account:  The wallet you have specified does not exist\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "148038cd-68b8-45ae-a48a-d1bb109b2e6a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "c5e536c4-3be7-4d3e-8515-316fa63756ec",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "ef47900e-0fd0-4b5d-8d0f-69fcb651c96c"
				},
				{
					"name": "Buy Airtime",
					"item": [
						{
							"name": "Successful Airtime purchase with valid payload",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is 200 for success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    \r",
											"    pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"    pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if transaction reference is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"100\",\r",
											"    \"billId\": \"1\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"phoneNumber\": \"07062765437\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"Buy the airtime\",\r",
											"    \"saveBeneficiary\": \"true\",\r",
											"    \"deviceId\": \"postman\",\r",
											"    \"beneficiaryName\": \"Bryan\",\r",
											"    \"beneficiaryPhone\": \"29847059374\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "184129b9-d270-46ba-9ceb-6a9e28e84598",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"anyportrrrr\",\n  \"phoneNumber\": \"07062765437\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"29847059374\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "99571cff-e710-4221-a7af-3940d80e63c0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Airtime purchase with negative amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"\r",
											"// pm.test(\"The 'amount' field should be a number\", function () {\r",
											"//     const responseData = pm.response.json();\r",
											"//     pm.expect(responseData).to.be.an('object');\r",
											"//     pm.expect(responseData.result.amount).to.be.a('number');\r",
											"// });\r",
											"\r",
											"// pm.test(\"Response structure and properties for 200\", function () {\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"// });\r",
											"\r",
											"// pm.test(\"Result object properties for 200\", function () {\r",
											"//     var result = pm.response.json().result;\r",
											"    \r",
											"//     pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"//     pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"//     pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"// });\r",
											"\r",
											"\r",
											"// pm.test(\"Check if transaction reference is present\", function () {\r",
											"//     var responseBody = pm.response.json();\r",
											"//     pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"// });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"100\",\r",
											"    \"billId\": \"1\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"phoneNumber\": \"07062765437\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"Buy the airtime\",\r",
											"    \"saveBeneficiary\": \"true\",\r",
											"    \"deviceId\": \"postman\",\r",
											"    \"beneficiaryName\": \"Bryan\",\r",
											"    \"beneficiaryPhone\": \"29847059374\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bf9d844c-c0c7-43ee-b34f-c95acee80efa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"anyportrrrr\",\n  \"phoneNumber\": \"07062765437\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"29847059374\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "9ca8c751-179e-43a7-ab7c-0a1373c0ba19",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid pin input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"100\",\r",
											"    \"billId\": \"1\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"phoneNumber\": \"07062765437\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6381\",\r",
											"    \"narration\": \"Buy the airtime\",\r",
											"    \"saveBeneficiary\": \"true\",\r",
											"    \"deviceId\": \"postman\",\r",
											"    \"beneficiaryName\": \"Bryan\",\r",
											"    \"beneficiaryPhone\": \"29847059374\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "86595421-ed77-4859-aa0f-c8e8c1e7f172",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"anyportrrrr\",\n  \"phoneNumber\": \"07062765437\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6381\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"29847059374\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "6246bded-b280-42dc-81b8-2823ff4382dc",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Duplicate Transaction Message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Duplicate Transaction with ref idnumber\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1013);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01012\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says duplicate transadtion\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Duplicate Transaction with ref idnumber\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8c70e5ef-f3c0-4b40-9c0c-7cbf289c9edf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"idnumber\",\n  \"phoneNumber\": \"07062765437\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"29847059374\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "f425e435-1749-42ab-808c-74c59fe786e4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says Phone number can only be digits with a length of 11 \", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Phone number can only be digits with a length of 11\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"100\",\r",
											"    \"billId\": \"1\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"phoneNumber\": \"0706276543p\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6381\",\r",
											"    \"narration\": \"Buy the airtime\",\r",
											"    \"saveBeneficiary\": \"true\",\r",
											"    \"deviceId\": \"postman\",\r",
											"    \"beneficiaryName\": \"Bryan\",\r",
											"    \"beneficiaryPhone\": \"29847059374\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "425727da-cd1a-4ad9-b1c9-a38c69c97e9d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"idnumber12345\",\n  \"phoneNumber\": \"0706276543p\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"07062765437\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "353b7807-ae55-4e9e-8a51-4b362bd70fcf",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "3748028d-52c2-432c-a4c3-7457296b3313"
				}
			],
			"id": "c7aa0b07-17cc-4c7f-b142-dd94f630d2b7"
		},
		{
			"name": "Transfers",
			"item": [
				{
					"name": "Beneficiaries",
					"item": [
						{
							"name": "Add Beneficiary",
							"item": [
								{
									"name": "New Beneficiary",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5af92fd5-fc1d-4aa8-89fd-6af6725c1a82",
												"exec": [
													"// Verify that the response has a result object\r",
													"pm.test(\"Response has a 'result' object\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"result\");\r",
													"});\r",
													"\r",
													"// Verify that the 'result' object has the expected 'message' property\r",
													"pm.test(\"Result object has 'message' property with value 'Beneficiary successfully added'\", function () {\r",
													"    const result = pm.response.json().result;\r",
													"    pm.expect(result).to.have.property(\"message\", \"Beneficiary successfully added\");\r",
													"});\r",
													"\r",
													"// Verify that the 'resultType' is 1\r",
													"pm.test(\"Result type is 1 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(1);\r",
													"});\r",
													"\r",
													"// Verify that the 'message' property is null\r",
													"pm.test(\"'message' property is null (Expected)\", function () {\r",
													"    const message = pm.response.json().message;\r",
													"    pm.expect(message).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that 'validationMessages' property is null\r",
													"pm.test(\"'validationMessages' property is null (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is true\r",
													"pm.test(\"'successful' property is true (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.true;\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"// Verify that 'responseCode' property is null\r",
													"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
													"    const responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "87f3fe34-4336-44de-953b-a61339a92fe3",
												"exec": [
													"// Function to generate a random 10-digit accountNumber\r",
													"function generateRandomAccountNumber() {\r",
													"    return Math.floor(Math.random() * 9000000000) + 1000000000;\r",
													"}\r",
													"\r",
													"// Function to generate a random email address\r",
													"function generateRandomEmail() {\r",
													"    const emailDomain = \"example.com\"; // You can replace this with your desired domain\r",
													"    const randomString = Math.random().toString(36).substring(7);\r",
													"    return `random_${randomString}@${emailDomain}`;\r",
													"}\r",
													"\r",
													"// Function to generate random alphabetic characters\r",
													"function generateRandomAlphabets(length) {\r",
													"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
													"    let result = '';\r",
													"    for (let i = 0; i < length; i++) {\r",
													"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
													"        result += characters.charAt(randomIndex);\r",
													"    }\r",
													"    return result;\r",
													"}\r",
													"\r",
													"// Generate random values\r",
													"const randomAccountNumber = generateRandomAccountNumber();\r",
													"const randomEmail = generateRandomEmail();\r",
													"const randomAlphabets = generateRandomAlphabets(10); // Generate 10 random alphabetic characters\r",
													"\r",
													"// Update the requestBody with random values\r",
													"const requestBody = {\r",
													"    \"beneficiaryName\": randomAlphabets,\r",
													"    \"bankName\": \"Providus\",\r",
													"    \"accountName\": randomAlphabets,\r",
													"    \"accountNumber\": randomAccountNumber.toString(), // Convert to string\r",
													"    \"emailAddress\": randomEmail,\r",
													"    \"countryCode\": \"+234\",\r",
													"    \"address\": \"Lagos\",\r",
													"    \"currencyRequirement\": {\r",
													"        \"name\": \"NGN\",\r",
													"        \"value\": \"100\",\r",
													"        \"forms\": [\r",
													"            {\r",
													"                \"dataLabel\": \"new beneficiary\",\r",
													"                \"dataValue\": \"Save\"\r",
													"            }\r",
													"        ]\r",
													"    }\r",
													"};\r",
													"\r",
													"pm.request.body.raw = JSON.stringify(requestBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "932b420e-8d63-4e72-bda5-d5513beaefba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiaryName\": \"Udem Chi\",\n  \"bankName\": \"Bababdus\",\n  \"accountName\": \"Udeme Chi\",\n  \"accountNumber\": \"1010001720\",\n  \"emailAddress\": \"udeme@assurdly.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Lagos\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"100\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"new beneficiary\",\n        \"dataValue\": \"Save\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "359e31f6-e18c-450a-a60a-886e6aaf80ba",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Beneficiary Already Exists",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "918113a2-0257-4c46-abd8-c19c4ebcaa1a",
												"exec": [
													"// Verify that the response has a 'result' object\r",
													"pm.test(\"Response has a 'result' object\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"result\");\r",
													"});\r",
													"\r",
													"// Verify that the 'result' object is null\r",
													"pm.test(\"'result' object is null (Expected)\", function () {\r",
													"    const result = pm.response.json().result;\r",
													"    pm.expect(result).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that the 'resultType' is 2\r",
													"pm.test(\"Result type is 2 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(2);\r",
													"});\r",
													"\r",
													"// Verify that the 'message' property is \"Beneficiary details already exists\"\r",
													"pm.test(\"'message' property is 'Beneficiary details already exists' (Expected)\", function () {\r",
													"    const message = pm.response.json().message;\r",
													"    pm.expect(message).to.equal(\"Beneficiary details already exists\");\r",
													"});\r",
													"\r",
													"// Verify that 'validationMessages' property is null\r",
													"pm.test(\"'validationMessages' property is null (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is false\r",
													"pm.test(\"'successful' property is false (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.false;\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"//\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4282b1a9-6db6-4f14-a222-4681b20aef83",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiaryName\": \"Abdel Abdufa\",\n  \"bankName\": \"Providus\",\n  \"accountName\": \"Abdel Abdufa\",\n  \"accountNumber\": \"1010001422\",\n  \"emailAddress\": \"abdel@email.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Abuja\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"100\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Money\",\n        \"dataValue\": \"Save Money\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "d32c0e88-74f6-483d-87f7-42e06fc969c2",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invalid Account number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e16b8c02-e97e-4858-b62e-f9b976b5b9df",
												"exec": [
													"// Verify that the response has a 'validationMessages' array\r",
													"pm.test(\"Response has a 'validationMessages' array\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"validationMessages\").that.is.an(\"array\");\r",
													"});\r",
													"\r",
													"// Verify that the 'validationMessages' array contains the expected error message\r",
													"pm.test(\"Validation error message is 'Account Number can only contain digits' (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.include(\"Account Number can only contain digits\");\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is false\r",
													"pm.test(\"'successful' property is false (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.false;\r",
													"});\r",
													"\r",
													"// Verify that 'resultType' is 3\r",
													"pm.test(\"Result type is 3 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(3);\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"// Verify that 'responseCode' property is null\r",
													"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
													"    const responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "fd60b4ac-b2c9-4a95-b5e0-dce932c8e523",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiaryName\": \"Abdel Abdufa\",\n  \"bankName\": \"Providus\",\n  \"accountName\": \"Abdel Abdufa\",\n  \"accountNumber\": \"1010001fhj\",\n  \"emailAddress\": \"abdel@email.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Abuja\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"100\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Money\",\n        \"dataValue\": \"Save Money\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "def82efa-d3f4-4d0c-a65f-616666d971a0",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invalid Beneficiary Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "918113a2-0257-4c46-abd8-c19c4ebcaa1a",
												"exec": [
													"// Verify that the response has a 'result' object\r",
													"pm.test(\"Response has a 'result' object\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"result\");\r",
													"});\r",
													"\r",
													"// Verify that the 'result' object is null\r",
													"pm.test(\"'result' object is null (Expected)\", function () {\r",
													"    const result = pm.response.json().result;\r",
													"    pm.expect(result).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that the 'resultType' is 3\r",
													"pm.test(\"Result type is 3 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(3);\r",
													"});\r",
													"\r",
													"// Verify that the 'message' property is \"Response has validation errors\"\r",
													"pm.test(\"'message' property is 'Response has validation errors' (Expected)\", function () {\r",
													"    const message = pm.response.json().message;\r",
													"    pm.expect(message).to.equal(\"Response has validation errors\");\r",
													"});\r",
													"\r",
													"// Verify that 'validationMessages' property contains \"Beneficiary Name can only contain alphabets\"\r",
													"pm.test(\"Validation error message is 'Beneficiary Name can only contain alphabets' (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.include(\"Beneficiary Name can only contain alphabets\");\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is false\r",
													"pm.test(\"'successful' property is false (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.false;\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"// Verify that 'responseCode' property is null\r",
													"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
													"    const responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "db7e6fc2-f916-4490-99fc-979c09450cb3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiaryName\": \"Abdel123 Lover\",\n  \"bankName\": \"Providus\",\n  \"accountName\": \"Abdel Abdufa\",\n  \"accountNumber\": \"1010001422\",\n  \"emailAddress\": \"abdel@email.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Abuja\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"100\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Money\",\n        \"dataValue\": \"Save Money\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "f7d971f5-4627-4055-a15a-4f498debf2da",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Blank - Beneficiary name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "918113a2-0257-4c46-abd8-c19c4ebcaa1a",
												"exec": [
													"// Verify that the response has a 'result' object\r",
													"pm.test(\"Response has a 'result' object\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"result\");\r",
													"});\r",
													"\r",
													"// Verify that the 'result' object is null\r",
													"pm.test(\"'result' object is null (Expected)\", function () {\r",
													"    const result = pm.response.json().result;\r",
													"    pm.expect(result).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that the 'resultType' is 3\r",
													"pm.test(\"Result type is 3 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(3);\r",
													"});\r",
													"\r",
													"// Verify that the 'message' property is \"Response has validation errors\"\r",
													"pm.test(\"'message' property is 'Response has validation errors' (Expected)\", function () {\r",
													"    const message = pm.response.json().message;\r",
													"    pm.expect(message).to.equal(\"Response has validation errors\");\r",
													"});\r",
													"\r",
													"// Verify that 'validationMessages' property contains \"Beneficiary Name can only contain alphabets\"\r",
													"pm.test(\"Validation error message is 'Beneficiary Name can only contain alphabets' (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.include(\"Beneficiary Name can only contain alphabets\");\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is false\r",
													"pm.test(\"'successful' property is false (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.false;\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"// Verify that 'responseCode' property is null\r",
													"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
													"    const responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e2f1873d-0d64-468d-a406-a7f3e3b45a6f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiaryName\": \"\",\n  \"bankName\": \"Providus\",\n  \"accountName\": \"Abdel Abdufa\",\n  \"accountNumber\": \"1010001422\",\n  \"emailAddress\": \"abdel@email.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Abuja\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"100\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Money\",\n        \"dataValue\": \"Save Money\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "8cb7e967-9baa-448c-844d-70d729ac222f",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "084f8783-a723-46e3-8b2a-eb2899d573f1"
						},
						{
							"name": "Single Beneficiary",
							"item": [
								{
									"name": "Get Single beneficiary details",
									"id": "f6fb6fd5-9418-4814-a20a-8d7e4098a25b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries/22"
									},
									"response": [
										{
											"id": "0fce9a1b-c401-4bb2-a0b6-6454348ce57a",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/transfers/beneficiaries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"transfers",
														"beneficiaries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"accountName\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"nameEnquiryId\": \"<integer>\",\n    \"accountId\": \"<long>\",\n    \"bankId\": \"<integer>\",\n    \"transferType\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "5707f16f-42dc-4abb-aec6-040848e48bdc"
						},
						{
							"name": "List All Beneficiaries",
							"item": [
								{
									"name": "List all beneficiaries by page",
									"id": "6aa9f4fb-0663-468c-bb01-53af2e904f94",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries/get-paged/1/20/%7B%7D"
									},
									"response": [
										{
											"id": "a1b1dca4-970d-4336-9e2c-610bd5b643be",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/transfers/beneficiaries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"transfers",
														"beneficiaries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"accountName\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"nameEnquiryId\": \"<integer>\",\n    \"accountId\": \"<long>\",\n    \"bankId\": \"<integer>\",\n    \"transferType\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "e8612af9-1040-42ec-9e09-ebf9c80d7bba"
						},
						{
							"name": "Edit details of a benficiary",
							"item": [
								{
									"name": "/api/v1/transfers/beneficiaries Copy 2",
									"id": "03c59b0b-c432-4f11-a766-b4a4d4a84454",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"22\",\n  \"beneficiaryName\": \"Golden Boy\",\n  \"bankName\": \"GoMoney\",\n  \"accountName\": \"Gold Launderrrrrrr\",\n  \"accountNumber\": \"9402762900\",\n  \"emailAddress\": \"user22@example.com\",\n  \"countryCode\": \"+234\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"200\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Save\",\n        \"dataValue\": \"Money\"\n      }\n    ]\n  },\n  \"address\": \"Port Harcourt\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "a729d426-b55a-4332-b067-51f297e83573",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "3312fec3-dcbc-4309-8ebc-d9d3f957b978"
						}
					],
					"id": "ca232648-36ac-42cf-84f2-96f13a285dbe"
				},
				{
					"name": "Intra Transfer",
					"item": [
						{
							"name": "Successful Intra Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b345c7bc-4c5f-4b2c-8a02-7064b4b789f1",
										"exec": [
											"// Validate the response status code is 200 (OK)\r",
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate the response structure and properties\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Amount is a non-negative number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.amount).to.exist.and.to.be.a('number');\r",
											"    pm.expect(responseData.result.amount).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Reference is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"// Assert that the \"reference\" field is present in the response body\r",
											"pm.test(\"Verify 'reference' field is present\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"reference\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6d318397-aa72-41a3-a2e6-3aa2221bb175",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Transfer this particualr amount\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"false\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-09-05T14:50:46.856Z\",\n    \"scheduledEndDate\": \"2023-01-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"5\",\n    \"repeatWeekDay\": \"1\",\n    \"repeatMonthDay\": \"10\",\n    \"repeatCount\": \"5\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/Transfer"
							},
							"response": [
								{
									"id": "5b1910a8-254d-4a0f-a72b-bedf8842b39e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Successful Intra Transfer - Negative amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b345c7bc-4c5f-4b2c-8a02-7064b4b789f1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
											"    pm.expect(jsonData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 3\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('The field Amount must be between 1 and 2147483647.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "79d7cd63-3c8d-45e8-a3c8-44e7db52e2fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Transfer this particualr amount\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"false\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-09-05T14:50:46.856Z\",\n    \"scheduledEndDate\": \"2023-01-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"5\",\n    \"repeatWeekDay\": \"1\",\n    \"repeatMonthDay\": \"10\",\n    \"repeatCount\": \"5\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/Transfer"
							},
							"response": [
								{
									"id": "8a837986-dddf-4e01-8491-f19bce803253",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96193c86-f583-48eb-97a2-308d022dec71",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'hasResult' field is present and has a boolean value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist.and.to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'message' field is present and has a string value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.message).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Assert the 'message' field is 'Invalid Transaction PIN'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'resultType' field is present and has a value of 2\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.exist.and.to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'result' field is present and has a null value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "79b564c8-3356-4f68-b012-aa5fba1b4df8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6381\",\n  \"narration\": \"Invalid\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": false,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "f3c5ffae-2dff-4721-838b-337b5e331c4f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Name Enquiry Request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c3262e9-f807-4a5a-a2a9-7e40f9a66f11",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Name enquiry record not found\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Name enquiry record not found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4656591d-29a6-4f10-a5f5-506d2197372f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Invalid\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"false\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"1300\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/"
							},
							"response": [
								{
									"id": "7f95768b-bba5-48d3-a401-3bb55de45df6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f66719ee-da77-4892-98ff-1f4511c79ed8",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages array and content for 400\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Account Number can only be digits with a length of 10\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0d6dde6d-d81c-4447-889a-3f075f344265",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Transfer now\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"124959400-3\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "5437d248-1dd2-4b37-822c-d52ba5fed5eb",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Send without validating scheduling details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea1ea26a-4458-4e93-a510-d0d514031670",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages array and content for 400\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Please specify schedule info for your transfer\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fa5de4cb-5eac-4d8d-8bcc-1dcc9a3636c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Wronng Schedule\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"true\",\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "95fd9861-e347-4fe7-bcd0-023f52dc0672",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Schedule a transfer directly",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a8918a2-39d6-4e49-8476-e418efc25530",
										"exec": [
											"// Validate the response status code is 200 (OK)\r",
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate the response structure and properties\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Amount is a non-negative number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.amount).to.exist.and.to.be.a('number');\r",
											"    pm.expect(responseData.result.amount).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Reference is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"// Assert that the \"reference\" field is present in the response body\r",
											"pm.test(\"Verify 'reference' field is present\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"reference\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5572e13f-a5b7-4c65-9ac9-1fd1d14a2033",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Schedule Transfer\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2025-09-04T18:00:46.856Z\",\n    \"scheduledEndDate\": \"2023-09-04T18:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "94ba6a74-c0bb-4426-b3ba-3ee7e805d4cc",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "471bc83a-0adf-42e8-bae5-00faf1fd1acb"
				},
				{
					"name": "Inter Transfer",
					"item": [
						{
							"name": "Successful Inter Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5c49b4e2-71af-4f52-bc97-8eded9583ccd",
										"exec": [
											"// Validate the response status code is 200 (OK)\r",
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate the response structure and properties\r",
											"pm.test(\"Response structure and properties\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Approved or completed successfully\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"00\");\r",
											"});\r",
											"\r",
											"pm.test(\"Amount is a non-negative number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.amount).to.exist.and.to.be.a('number');\r",
											"    pm.expect(responseData.result.amount).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Reference is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"// Assert that the \"reference\" field is present in the response body\r",
											"pm.test(\"Verify 'reference' field is present\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"reference\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4ad7aeb3-4a27-40f8-bdb8-b1870d3f8a6c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Transfer now\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": false,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1780004070\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "e11a9b2e-6a72-4889-8056-350ec7c4060e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Name Equiry Request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ddf00522-90e1-49ec-bcb9-4e369e274e51",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Name enquiry record not found\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Name enquiry record not found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d42184de-bf9c-43f5-8a1a-a65316a01871",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Transfer overseas\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1780004070\",\n  \"nameEnquiryRequestId\": \"1000\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "eac74e2a-75d4-4b8f-80ae-d5513a85696c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Send transfer without validating schedule details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b83f8d5d-5100-4e95-a909-8e25a7337304",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Transfer could not be completed\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1018);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78TF01017\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Transfer could not be completed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code for failed request is 1018\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(1018);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "eb15204e-f95d-44d4-bc66-c05bb0b9220c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Good Transfer\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"true\",\n  \"accountNumber\": \"1780004070\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "305510fa-272e-4851-b90d-02e82b89afba",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0029b6d3-3850-47fa-9901-c9ae27bf2add",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Account\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"07\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Account\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c093fd6b-155f-45d1-a731-d57660712074",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Invalid account number\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1780001233\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "726cc9cc-e401-4b39-9541-822237ea2626",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33b8de08-136d-4dd1-a8c3-228a67f9013f",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'hasResult' field is present and has a boolean value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist.and.to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'message' field is present and has a string value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.message).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Assert the 'message' field is 'Invalid Transaction PIN'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'resultType' field is present and has a value of 2\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.exist.and.to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'result' field is present and has a null value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "398ad033-bf81-46e6-b7c3-de51d5e8c1e0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6385\",\n  \"narration\": \"Transfer overseas\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1780004070\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "40e7fc03-8d7f-4fed-b7f5-3c5d6724e5c7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "a618c322-9fb5-4130-8825-3bde4ad1d628"
				},
				{
					"name": "Schedule",
					"item": [
						{
							"name": "Successful Schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e43b2278-6f30-40c0-ab46-360dcf63ac1e",
										"exec": [
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    pm.expect(result).to.have.property(\"amount\", 0.0);\r",
											"    pm.expect(result).to.have.property(\"reference\", null);\r",
											"    pm.expect(result).to.have.property(\"accountNumber\", null);\r",
											"    pm.expect(result).to.have.property(\"message\", \"Transfer scheduled successfully\");\r",
											"    pm.expect(result).to.have.property(\"bankName\", null);\r",
											"    pm.expect(result).to.have.property(\"accountName\", null);\r",
											"    pm.expect(result).to.have.property(\"status\", null);\r",
											"    pm.expect(result).to.have.property(\"sessionId\", null);\r",
											"    pm.expect(result).to.have.property(\"senderName\", null);\r",
											"    pm.expect(result).to.have.property(\"senderAccountNumber\", null);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bcfa233f-81c1-4634-9e56-856c92fe741d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1010001626\",\n  \"amount\": \"5000\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"New Schedule for 9 in the morning Sharp\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-10-20T09:00:00.942Z\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-10-25T10:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone19\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "34deaf63-9475-4e96-8cf4-995c2ebc12b7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Successful Schedule - Negative amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e43b2278-6f30-40c0-ab46-360dcf63ac1e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
											"    pm.expect(jsonData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 3\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('The field Amount must be between 1 and 2147483647.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "05d2198f-bf59-420b-92fc-b75e99927ac5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1010001626\",\n  \"amount\": \"-5000\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"New Schedule for 9 in the morning Sharp\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-10-20T09:00:00.942Z\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-10-25T10:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone19\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "140e34ad-1bc9-40d1-8e91-7de8e37e439c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Automate Recurring Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e43b2278-6f30-40c0-ab46-360dcf63ac1e",
										"exec": [
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    pm.expect(result).to.have.property(\"amount\", 0.0);\r",
											"    pm.expect(result).to.have.property(\"reference\", null);\r",
											"    pm.expect(result).to.have.property(\"accountNumber\", null);\r",
											"    pm.expect(result).to.have.property(\"message\", \"Transfer scheduled successfully\");\r",
											"    pm.expect(result).to.have.property(\"bankName\", null);\r",
											"    pm.expect(result).to.have.property(\"accountName\", null);\r",
											"    pm.expect(result).to.have.property(\"status\", null);\r",
											"    pm.expect(result).to.have.property(\"sessionId\", null);\r",
											"    pm.expect(result).to.have.property(\"senderName\", null);\r",
											"    pm.expect(result).to.have.property(\"senderAccountNumber\", null);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "20cb7242-e28a-480a-88ac-f54fb0451c32",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1780004070\",\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"New Schedule for 9 in the morning Sharp\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-09-01T09:00:00.942Z\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-09-02T10:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone19\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "f921fe00-4d98-46d3-96a5-dd348ce70c5e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Insufficient balance for a scheduled transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e03973b-2610-48e8-b6ae-c115cdfcc60f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6bb69269-17f8-4b61-a6e5-ef12e1e18069",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1780004070\",\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"SCH\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-09-01T09:00:00.942Z\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-09-02T10:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone19\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "0e7d9358-26e6-4c1f-98dd-51950243f60d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Name  Equiry request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb870769-338b-412d-8562-8f8c7b98f766",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Name enquiry record not found\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Name enquiry record not found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f76bc821-33c2-4cf5-91ad-37a293fe7713",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1780004070\",\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"1000\",\n  \"narration\": \"New Schedule\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-09-01T09:00:00.942Z\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-09-02T09:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "c37e0117-81db-4da5-9f87-b4e0bb976d2f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Date in the past",
							"id": "18dfd3a3-07cc-4f8e-aff5-a470624c0b99",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1780004070\",\n  \"amount\": \"700\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"New Schedule\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2022-09-01T09:00:00.942Z\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-09-02T09:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "49078463-4e76-4eea-bef9-86bca30cb4ca",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "abb3c74e-3693-4a57-a950-cb72d1ad1c70"
				},
				{
					"name": "Bulk Transfer",
					"item": [
						{
							"name": "Successful Bulk transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ddaa178b-31dd-45b8-993c-6c2be34bc48b",
										"exec": [
											"pm.test(\"Response code is 200 (OK)\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response hasResult property is a boolean\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Response result property is an array\", function () {",
											"    pm.expect(pm.response.json().result).to.be.an('array');",
											"});",
											"",
											"pm.test(\"Response resultType property is a number or null\", function () {",
											"    pm.expect(pm.response.json().resultType).to.satisfy(function(value) {",
											"        return typeof value === 'number' || value === null;",
											"    });",
											"});",
											"",
											"pm.test(\"Response message property is a string or null\", function () {",
											"    pm.expect(pm.response.json().message).to.satisfy(function(value) {",
											"        return typeof value === 'string' || value === null;",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"Response successful property is a boolean or null\", function () {",
											"    pm.expect(pm.response.json().successful).to.satisfy(function(value) {",
											"        return typeof value === 'boolean' || value === null;",
											"    });",
											"});",
											"",
											"pm.test(\"Response errorCode property is a number or null\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.satisfy(function(value) {",
											"        return typeof value === 'number' || value === null;",
											"    });",
											"});",
											"",
											"pm.test(\"Response responseCode property is a string or null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.satisfy(function(value) {",
											"        return typeof value === 'string' || value === null;",
											"    });",
											"});",
											"",
											"pm.test(\"At least one success message is present\", function () {",
											"    const results = pm.response.json().result;",
											"    ",
											"    // Use a flag to track if a success message is found",
											"    let successFound = false;",
											"",
											"    // Iterate through the results array",
											"    results.forEach(function (result) {",
											"        if (result.message === \"Successful\") {",
											"            successFound = true;",
											"            return; // Exit the loop once a success message is found",
											"        }",
											"    });",
											"    pm.expect(successFound).to.equal(true, \"No success message found in the response\");",
											"});",
											"",
											"pm.test(\"At least one 'Transfer in processing' message is present\", function () {",
											"    const results = pm.response.json().result;",
											"",
											"    const hasProcessingMessage = results.some(function (result) {",
											"        return result.message === \"Transfer in processing\";",
											"    });",
											"",
											"    pm.expect(hasProcessingMessage).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b21bd0de-b28f-4cd5-b068-6f261a80cc41",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"1010001367\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1780004070\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001729\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "7e574e22-0653-40a9-99ea-4c86c55421e1",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin in all transfers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5041b496-bbb7-4aa9-adac-780ff603f807",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'hasResult' field is present and has a boolean value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist.and.to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'message' field is present and has a string value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.message).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Assert the 'message' field is 'Invalid Transaction PIN'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'resultType' field is present and has a value of 2\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.exist.and.to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'result' field is present and has a null value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "25f21a0b-ab51-472c-86a4-38874ec05719",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6381\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"1010001367\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1780004070\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001729\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "e7bb27cf-5519-4323-a823-73606a48f2fa",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account Details for one transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86ac9ee3-19af-4ee8-84bf-a3a92fd0cfce",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response is an object with properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('hasResult', 'result', 'resultType', 'message', 'validationMessages', 'successful', 'errorCode', 'responseCode');",
											"});",
											"",
											"pm.test(\"Test response properties for data types\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"",
											"    // Check the data types of individual properties",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');",
											"    pm.expect(responseData.result).to.be.null;",
											"    pm.expect(responseData.resultType).to.be.a('number');",
											"    pm.expect(responseData.message).to.be.a('string');",
											"    pm.expect(responseData.validationMessages).to.be.an('array');",
											"    pm.expect(responseData.successful).to.be.a('boolean');",
											"    pm.expect(responseData.errorCode).to.be.a('number');",
											"    pm.expect(responseData.responseCode).to.be.null;",
											"});",
											"",
											"",
											"pm.test(\"Response contains the expected validation message\", function () {",
											"    var jsonData = pm.response.json();",
											"    var validationMessages = jsonData.validationMessages;",
											"    pm.expect(validationMessages).to.include(\"Account Number can only be digits with a length of 10\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "57017b74-a554-4706-a047-d96b6a6d5346",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"1010001367\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1780004070\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001dgjhd\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "afd48ab9-69f8-4975-90e6-ae5c65a959c7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account details for all transfers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80cfc383-6e28-4c8f-b600-fbc5676138fb",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an object with properties\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('hasResult', 'result', 'resultType', 'message', 'validationMessages', 'successful', 'errorCode', 'responseCode');\r",
											"});\r",
											"\r",
											"pm.test(\"Test response properties for data types\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"\r",
											"    // Check the data types of individual properties\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.errorCode).to.be.a('number');\r",
											"    pm.expect(responseData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response contains the expected validation message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var validationMessages = jsonData.validationMessages;\r",
											"    pm.expect(validationMessages).to.include(\"Account Number can only be digits with a length of 10\",\r",
											"        \"Account Number can only be digits with a length of 10\",\r",
											"        \"Account Number can only be digits with a length of 10\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a39ae902-39e3-43c3-9985-5724fd79a321",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"10100013fh\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"17800040we\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001dy\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "31c355ec-5adb-424c-9811-79bd0158fa4a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Schedule Bulk Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9245232c-a571-43a3-9d19-ec295f5d74ef",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Amount is a non-negative number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.an('array');\r",
											"    \r",
											"    responseData.result.forEach(function (result) {\r",
											"        pm.expect(result.amount).to.be.a('number');\r",
											"        pm.expect(result.amount).to.be.at.least(0);\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Reference is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('array');\r",
											"    \r",
											"    responseData.result.forEach(function (result) {\r",
											"        pm.expect(result.reference).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Reference should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Each result object has an accountNumber property\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('array');\r",
											"    \r",
											"    responseData.result.forEach(function (result) {\r",
											"        pm.expect(result.accountNumber).to.exist.and.to.be.a('string');\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f9d49bac-5ff2-49c9-a4cc-7029f56e3bac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"1010001367\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1780004070\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001729\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "05e29336-fe2b-403d-a82d-2d9b791a0f14",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "fa3fd9f0-a1db-475e-a9ef-c15c61108c02"
				},
				{
					"name": "File Bulk Transfer",
					"item": [
						{
							"name": "process-transfer",
							"item": [
								{
									"name": "Sucessful transfer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c85b4d0b-b635-49f0-910f-8b645a6b4a49",
												"exec": [
													"// Test for response status code\r",
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// Test for response body properties\r",
													"pm.test(\"Response body has all expected properties\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"hasResult\");\r",
													"    pm.expect(jsonData).to.have.property(\"result\");\r",
													"    pm.expect(jsonData).to.have.property(\"resultType\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\");\r",
													"    pm.expect(jsonData).to.have.property(\"validationMessages\");\r",
													"    pm.expect(jsonData).to.have.property(\"successful\");\r",
													"    pm.expect(jsonData).to.have.property(\"errorCode\");\r",
													"    pm.expect(jsonData).to.have.property(\"responseCode\");\r",
													"});\r",
													"\r",
													"// Test for specific property values\r",
													"pm.test(\"hasResult property is a boolean\", function () {\r",
													"    var hasResult = pm.response.json().hasResult;\r",
													"    pm.expect(hasResult).to.be.a(\"boolean\");\r",
													"});\r",
													"\r",
													"pm.test(\"result property is an object\", function () {\r",
													"    var result = pm.response.json().result;\r",
													"    pm.expect(result).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"resultType property is a number\", function () {\r",
													"    var resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validate 'result' object with 'message'\", function () {\r",
													"    const responseData = pm.response.json();\r",
													"    pm.expect(responseData.result).to.be.an('object');\r",
													"    pm.expect(responseData.result).to.have.property('message');\r",
													"    pm.expect(responseData.result.message).to.equal(\"Bulk process has started. Please check notification center for result\");\r",
													"});\r",
													"\r",
													"pm.test(\"successful property is a boolean\", function () {\r",
													"    var successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.a(\"boolean\");\r",
													"});\r",
													"\r",
													"pm.test(\"errorCode property is a number\", function () {\r",
													"    var errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"responseCode property is null\", function () {\r",
													"    var responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1df9fb86-db4c-4ef0-9c8a-8b3920723e49",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaries\": [\n    {\n            \"accountName\": \"Reece Koch\",\n            \"accountNumber\": \"1010001719\",\n            \"nameEnquiryId\": 600,\n            \"amount\": \"100\",\n            \"narration\": \"First Salary\"\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8045013161\",\n            \"amount\": \"110\",\n            \"narration\": \"Second Salary\",\n            \"nameEnquiryId\": 601\n        },\n        {\n            \"accountName\": \"Chi Chi\",\n            \"accountNumber\": \"8198765432\",\n            \"amount\": \"120\",\n            \"narration\": \"Third Salary\",\n            \"nameEnquiryId\": 602\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8055584568\",\n            \"amount\": \"130\",\n            \"narration\": \"Fourth Salary\",\n            \"nameEnquiryId\": 603\n        },\n        {\n            \"accountName\": \"Bunch Dillon\",\n            \"accountNumber\": \"9373494343\",\n            \"amount\": \"140\",\n            \"narration\": \"Fift Salary\",\n            \"nameEnquiryId\": 604\n        }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/process-transfer"
									},
									"response": [
										{
											"id": "8c3834d4-befb-4eaf-9535-477a3dc81661",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"3555\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    },\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/process-transfer"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invalid pin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c85b4d0b-b635-49f0-910f-8b645a6b4a49",
												"exec": [
													"pm.test(\"Status code is 400 Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has expected structure\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
													"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78TF01002\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b104ab3d-c412-441d-a2cd-3228c373d5ff",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{bussAccount}}\",\n  \"transactionPin\": \"6384\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaries\": [\n    {\n            \"accountName\": \"Reece Koch\",\n            \"accountNumber\": \"1010001719\",\n            \"nameEnquiryId\": 600,\n            \"amount\": \"100\",\n            \"narration\": \"Salary\"\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8045013161\",\n            \"amount\": \"110\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 601\n        },\n        {\n            \"accountName\": \"Chi Chi\",\n            \"accountNumber\": \"8198765432\",\n            \"amount\": \"120\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 602\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8055584568\",\n            \"amount\": \"130\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 603\n        },\n        {\n            \"accountName\": \"Bunch Dillon\",\n            \"accountNumber\": \"9373494343\",\n            \"amount\": \"140\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 604\n        }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/process-transfer"
									},
									"response": [
										{
											"id": "0618cff6-862e-4d82-95ea-8fed5ef42f91",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"3555\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    },\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/process-transfer"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invalid channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c85b4d0b-b635-49f0-910f-8b645a6b4a49",
												"exec": [
													"pm.test(\"Status code is 400 Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has expected structure\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
													"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\").to.be.an('array').that.includes(\"The field Channel is invalid.\");\r",
													"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "cde928be-b31a-4bf1-a12c-7cb429d85a32",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": \"1000\",\n  \"sourceAccountNo\": \"{{bussAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaries\": [\n    {\n            \"accountName\": \"Reece Koch\",\n            \"accountNumber\": \"1010001719\",\n            \"nameEnquiryId\": 600,\n            \"amount\": \"100\",\n            \"narration\": \"Salary\"\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8045013161\",\n            \"amount\": \"110\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 601\n        },\n        {\n            \"accountName\": \"Chi Chi\",\n            \"accountNumber\": \"8198765432\",\n            \"amount\": \"120\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 602\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8055584568\",\n            \"amount\": \"130\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 603\n        },\n        {\n            \"accountName\": \"Bunch Dillon\",\n            \"accountNumber\": \"9373494343\",\n            \"amount\": \"140\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 604\n        }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/process-transfer"
									},
									"response": [
										{
											"id": "66f1fa8a-71d7-437a-9eef-d387dad0c115",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"3555\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    },\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/process-transfer"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "f6cb92fa-b74f-4827-9813-8121d851e96b"
						},
						{
							"name": "validate-upload",
							"item": [
								{
									"name": "Valid entry",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e41a53a3-f097-4e25-aced-28de7cf7cf89",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is an object with properties\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('hasResult', 'result', 'resultType', 'message', 'validationMessages', 'successful', 'errorCode', 'responseCode');\r",
													"});\r",
													"\r",
													"pm.test(\"hasResult property is a boolean\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
													"});\r",
													"\r",
													"pm.test(\"result property is an array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.result).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Each element in the result array has the required properties\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    jsonData.result.forEach(function(element) {\r",
													"        pm.expect(element).to.be.an('object').that.has.all.keys('accountName', 'accountNumber', 'isValid', 'bankCode', 'bankName', 'nameEnquiryId', 'message');\r",
													"    });\r",
													"});\r",
													"\r",
													"pm.test(\"resultType property is a number\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.resultType).to.be.a('number');\r",
													"});\r",
													"\r",
													"pm.test(\"message property is a string\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"validationMessages property is an array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"successful property is a boolean\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
													"});\r",
													"\r",
													"pm.test(\"errorCode property is a number\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
													"});\r",
													"\r",
													"pm.test(\"responseCode property is null or a string\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.responseCode).to.be.oneOf([null, 'string']);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "9f09179e-eb59-4fbd-a29f-71e63c62b231",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://bank78-dev-file-uploads.s3.eu-west-1.amazonaws.com/638344605583717455-Buktrans.csv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/validate-upload"
									},
									"response": [
										{
											"id": "6326a544-b439-46d2-ab28-bc5ed0a89803",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fileUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/validate-upload"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invald entry",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e41a53a3-f097-4e25-aced-28de7cf7cf89",
												"exec": [
													"pm.test(\"Status code is 400 Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has expected structure\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Error occured while processing some records: Input string was not in a correct format.\");\r",
													"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c16cbe21-ef2f-4c75-b66b-19ae28a866e1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://bank78-dev-file-uploads.s3.eu-west-1.amazonaws.com/638345482533170516-Buktrans1.csv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/validate-upload"
									},
									"response": [
										{
											"id": "4a383f1a-aba9-4603-8100-b886a2da5d76",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fileUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/validate-upload"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Missing column",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e41a53a3-f097-4e25-aced-28de7cf7cf89",
												"exec": [
													"pm.test(\"Status code is 400 Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has expected structure\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Error occured while processing some records: Input string was not in a correct format.\");\r",
													"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2d4a22a1-11b1-4a79-8759-5faaf3d25f1d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://bank78-dev-file-uploads.s3.eu-west-1.amazonaws.com/638345484657715591-Buktrans2.csv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/validate-upload"
									},
									"response": [
										{
											"id": "b44c5a05-ee15-45dc-892a-8ada55b9585b",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fileUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/validate-upload"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "8bee5f73-433d-4d77-854b-1c58ef6eff65"
						},
						{
							"name": "download-template",
							"item": [
								{
									"name": "/api/v1/transfer/bulk/download-template",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5be01008-1d0f-445b-b014-31927688e0d5",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate CSV Headers\", function () {\r",
													"    // Parse the response as text\r",
													"    const responseText = pm.response.text();\r",
													"\r",
													"    // Split the response text into lines\r",
													"    const lines = responseText.split('\\n');\r",
													"\r",
													"    // Extract the header line (assuming it's the first line)\r",
													"    const headerLine = lines[0];\r",
													"\r",
													"    // Split the header line into individual headers\r",
													"    const headers = headerLine.split(',');\r",
													"\r",
													"    // Define the expected headers\r",
													"    const expectedHeaders = [\"BankCode\", \"AccountNumber\", \"Amount\", \"Narration\"];\r",
													"\r",
													"    // Check if all the expected headers are present in the response\r",
													"    expectedHeaders.forEach(function (header) {\r",
													"        pm.expect(headers).to.include(header);\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b43a7107-f0de-4d2a-aa13-8963b807fa87",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/download-template"
									},
									"response": [
										{
											"id": "8f1e44cf-4174-4ab0-aa68-f911eb2d9191",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/transfer/bulk/download-template"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"bankCode\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"amount\": \"<string>\",\n      \"narration\": \"<string>\"\n    },\n    {\n      \"bankCode\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"amount\": \"<string>\",\n      \"narration\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "22b06dbd-4cf1-4929-82eb-a74591f20df9"
						},
						{
							"name": "download-bank-codes",
							"item": [
								{
									"name": "/api/v1/transfer/bulk/download-bank-codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0cb39bbe-e21e-4721-9d99-2de5639923b3",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "99fb3cae-81f5-4db4-b787-ddbe10b14b78",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/download-bank-codes"
									},
									"response": [
										{
											"id": "d0f800ff-ee5b-452a-a551-05f8235cea96",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/transfer/bulk/download-bank-codes"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\"\n    },\n    {\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "e6a69620-329d-4450-96ac-5e233463d318"
						}
					],
					"id": "7cd82aee-bccd-4f3f-b2c9-8ffd8301835f"
				}
			],
			"id": "69544b5b-914d-45de-8ca5-cb07c0da46d4"
		},
		{
			"name": "SavingsPlan",
			"item": [
				{
					"name": "Login Copy",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is present in the response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is a non-empty string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"customer_access_token\", jsonData.access_token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "49fc768c-068e-4234-ab91-f1202a39f845",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username= test1860@mailinator.com, test6900, {{latest_cust_email}}",
											"key": "username",
											"value": "test8033@mailinator.com"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "696abf16-e69e-4ab4-912b-4c3f2ce04696",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "96aba3cd-37b9-49f2-9e98-b7118b3f4275"
				},
				{
					"name": "Add A Savings",
					"item": [
						{
							"name": "Succcessful Savings Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "869427a4-38ed-4a5a-a51b-109cf1f9360e",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property with value 'true'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'resultType' property with value '1'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'message' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'validationMessages' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'successful' property with value 'true'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'errorCode' property with value '0'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'responseCode' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' property contains a 'message' property with value 'Plan created successfully'\", function() {\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"message\", \"Plan created successfully\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "35eb399e-2118-4b93-a2d4-f48a6db1c72c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"3\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"First month (November)\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"500\",\n  \"autoSave\": \"false\",\n  \"savingAmount\": \"100\",\n  \"savingStartDate\": \"2027-09-23T07:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "58b2cb17-739b-4c64-af41-9841e6bc4d49",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Date required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86265b60-3838-4aa2-9cb7-51a942036404",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property set to false\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'result' property is null\", function () {",
											"    pm.expect(pm.response.json().result).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'resultType' property is 3\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(3);",
											"});",
											"",
											"pm.test(\"Response 'message' property is 'Response has validation errors'\", function () {",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' property is an array with specific messages\", function () {",
											"    const validationMessages = pm.response.json().validationMessages;",
											"    pm.expect(validationMessages).to.be.an('array');",
											"    pm.expect(validationMessages).to.include(\"'Saving Start Date' must not be empty.\");",
											"    pm.expect(validationMessages).to.include(\"Kindly specify the saving start date\");",
											"});",
											"",
											"pm.test(\"Response 'successful' property is false\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' property is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' property is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b8e2372c-91ac-4106-b613-507c02595158",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"3\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"First month (october)\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/savings/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "1756f6aa-f1ad-49de-8122-223ea0ffaad7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Frequency that doesn't exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6d495db-64e9-4259-8250-b186b4a9f74e",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The field Frequency is invalid.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "222ac4e0-c8f9-4646-9ea9-9b4600cc71d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"100\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"New Savings Plan\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2027-09-23T07:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "2e28454f-690a-4fbf-b2c0-cf735bd87b1e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity Days Required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd77f933-67ef-4a55-8fbe-9f0f2bfffa6b",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Int32'. Path 'maturityDays', line 4, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e3b7a9a1-247c-481f-a2d0-f571edcb2d4a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "cd3ed607-d22a-4bcc-b4e7-674294d2cddb",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity Number at 0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a6f373e-cbfb-4cd6-8049-97beb4bf6eef",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Please supply a maturity value in days\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0e7a718f-27d0-4f6a-a14f-06103de60aa8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"0\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"false\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "471eebb1-bec1-4a91-b18f-d2edd778d7b6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Account number is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91ec3b44-4040-465a-aa5a-66e375081f56",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The SourceAccountNo field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4f55bfcd-9d5e-4c40-af68-0c667af85972",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "2f1da936-6c0d-4c92-8073-da4f08e0b8c4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Savings Amount required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b51c0d57-1bab-49cc-beec-679c13c003ae",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Decimal'. Path 'savingAmount', line 10, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b6e6cb2d-3cf7-4a42-a5ff-6e48e23c6a6c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"\",\n  \"savingStartDate\": \"2023-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "2f00e081-a603-4218-bbc1-437ac09436da",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Target amount required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b3fc5e3-a1dc-4610-b983-25ac3dc30fb8",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Decimal'. Path 'targetAmount', line 8, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "00b691b9-a7b7-46c5-ac28-e229ac08adea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "ffe09084-6e14-43b4-9752-4b47e2551871",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Plan name is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac9ea620-51d2-4ae4-81c4-130d624f208f",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The PlanName field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1fb7f10a-6aca-4b1c-ab81-9e647b4828c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "493ab3c3-4f31-41e9-b041-ea87db6913ae",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Target Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "864f94bc-88e8-474e-86c6-0d9f9c29862d",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with two messages\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(2);\r",
											"    pm.expect(validationMessages).to.include(\"The field SavingAmount must be between 1 and 2147483647.\");\r",
											"    pm.expect(validationMessages).to.include(\"Savings target amount is required\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3680afbe-d278-4add-a882-f877f165468f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"-100\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"-400\",\n  \"savingStartDate\": \"2024-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "96a3e9d0-0834-4dc3-aa3e-58a75465648f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid product ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eec0901e-3ced-473d-990e-67d633100383",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Error creating savings plan: Invalid saving product ID'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Error creating savings plan: Invalid saving product ID\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4cd8a4a2-d6b2-4b1f-bd08-14c7201f82f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"Invalid Product ID\",\n  \"savingsProductId\": \"1000\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "3b6afdbf-aadb-4cc2-b2da-70d05e92137c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Start date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5c177700-8502-4ec4-8a7b-894a3b310fb9",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Invalid Saving's Start date, date must be greater than or equals to today'\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.include(\"Invalid Saving's Start date, date must be greater than or equals to today\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ec952934-79d6-4000-a0e4-ea1d5b5da275",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"Invalid start date\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2022-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "1dace8c6-9bb7-496b-9fe8-c5750dd90807",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "706c8f5a-6951-4bc4-b717-4862d198610a"
				},
				{
					"name": "Edit Savings Plan",
					"item": [
						{
							"name": "Succcessful Savings Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bdf4fc54-a642-4d25-8bd5-9b3dfa5f3011",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property with value 'true'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'resultType' property with value '1'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'message' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'validationMessages' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'successful' property with value 'true'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'errorCode' property with value '0'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'responseCode' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' property contains a 'message' property with value 'Plan updated successfully'\", function() {\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"message\", \"Plan updated successfully\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f3194571-f802-4b0b-8fb1-b2240b48b4d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"2\",\n  \"maturityDays\": \"10\",\n  \"planName\": \"Updated Plan\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"4000\",\n  \"autoSave\": \"false\",\n  \"savingAmount\": \"3000\",\n  \"savingStartDate\": \"2025-09-23T07:15:00.942Z\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "0a6c8c27-07f5-436d-a489-594d073a7833",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Date required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86265b60-3838-4aa2-9cb7-51a942036404",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property set to false\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'result' property is null\", function () {",
											"    pm.expect(pm.response.json().result).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'resultType' property is 3\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(3);",
											"});",
											"",
											"pm.test(\"Response 'message' property is 'Response has validation errors'\", function () {",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' property is an array with specific messages\", function () {",
											"    const validationMessages = pm.response.json().validationMessages;",
											"    pm.expect(validationMessages).to.be.an('array');",
											"    pm.expect(validationMessages).to.include(\"'Saving Start Date' must not be empty.\");",
											"    pm.expect(validationMessages).to.include(\"Kindly specify the saving start date\");",
											"});",
											"",
											"pm.test(\"Response 'successful' property is false\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' property is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' property is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a38eb546-e647-4c30-9029-2634bc944742",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"3\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"First month (october)\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "eaacd483-f410-4a67-a966-ca28cd0a93cb",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Frequency that doesn't exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6d495db-64e9-4259-8250-b186b4a9f74e",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The field Frequency is invalid.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4aa7f70d-865a-45d4-b0d6-5481a81194bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"100\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"New Savings Plan\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2027-09-23T07:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "69724cd4-ad07-4922-826d-4b539393c81a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity Days Required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd77f933-67ef-4a55-8fbe-9f0f2bfffa6b",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Int32'. Path 'maturityDays', line 4, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "efd24cd8-9b30-4b14-9c3e-6c55be3e8f13",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "82969086-b625-4ab0-8547-6ebece68286b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity Number at 0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a6f373e-cbfb-4cd6-8049-97beb4bf6eef",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Please supply a maturity value in days\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "19da8d6e-2b41-4efa-944f-1193641e73c3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"0\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"false\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\",\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "d46a4483-247c-42ae-bd9c-8272dcdaf5f0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Account number is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91ec3b44-4040-465a-aa5a-66e375081f56",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The SourceAccountNo field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a5b2f3b2-2f99-498e-88a5-528033d3057d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "3b1ef88b-e168-40c2-97ab-e3d9beaee7df",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Savings Amount required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b51c0d57-1bab-49cc-beec-679c13c003ae",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Decimal'. Path 'savingAmount', line 10, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1a09333b-2049-4843-bccf-e43c298a810d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"\",\n  \"savingStartDate\": \"2023-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "ca87b3aa-e21b-40ad-b4bd-11c77c48c386",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Target amount required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b3fc5e3-a1dc-4610-b983-25ac3dc30fb8",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Decimal'. Path 'targetAmount', line 8, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "81b5defb-e247-44a5-9d28-9aedd5334cfe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "97f68346-8fc0-4b07-bcef-1cf26184ab63",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Plan name is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac9ea620-51d2-4ae4-81c4-130d624f208f",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The PlanName field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a5cdf651-6d4a-47f8-bca7-73435c983b40",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "bc0bb059-a2cb-4f42-8951-556c615cfc8a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Target Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "864f94bc-88e8-474e-86c6-0d9f9c29862d",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with two messages\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(2);\r",
											"    pm.expect(validationMessages).to.include(\"The field SavingAmount must be between 1 and 2147483647.\");\r",
											"    pm.expect(validationMessages).to.include(\"Savings target amount is required\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7a84ae4c-c664-4438-bfc3-10d874a032e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"-100\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"-400\",\n  \"savingStartDate\": \"2024-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "62cc5f4b-412b-4f62-a116-fc4ee97dd04b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid product ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eec0901e-3ced-473d-990e-67d633100383",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Error updating savings plan'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Error updating savings plan\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3950a8b2-0912-46dd-8ec5-d86fba2d42d1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"Invalid Product ID\",\n  \"savingsProductId\": \"1000\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "2f5cb2e6-6995-49af-92ad-0760f60123b7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Start date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5c177700-8502-4ec4-8a7b-894a3b310fb9",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Invalid Saving's Start date, date must be greater than or equals to today'\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.include(\"Invalid Saving's Start date, date must be greater than or equals to today\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7f9f3a7e-8f16-477b-a37b-34a76189b2c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"Invalid start date\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2022-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "886ac15a-d633-4fb7-85dd-88ca0c5fb989",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "f1df1670-87ea-484f-bb6e-382573508b4e"
				},
				{
					"name": "deposit into savings plan",
					"item": [
						{
							"name": "Successful Deposit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cdf61fa9-5917-444f-8a65-059e0841fc29",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"The hasResult field should be a boolean\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.hasResult).to.be.a('boolean');",
											"});",
											"",
											"",
											"pm.test(\"The 'result' field is an object\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result).to.be.an('object');",
											"});",
											"",
											"",
											"pm.test(\"Validate resultType field is a number\", function() {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData.resultType).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Response has 'hasResult' set to true\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'result' is an object\", function () {",
											"    pm.expect(pm.response.json().result).to.be.an('object');",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 1\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(1);",
											"});",
											"",
											"pm.test(\"Response 'message' is null\", function () {",
											"    pm.expect(pm.response.json().message).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is null\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'successful' is true\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'result' has 'reference' property\", function () {",
											"    pm.expect(pm.response.json().result).to.have.property('reference');",
											"});",
											"",
											"pm.test(\"Response 'result' has 'message' property\", function () {",
											"    pm.expect(pm.response.json().result).to.have.property('message');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "820a0eb1-1544-4cb9-bc10-15a277cd468c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"144\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "dfadb855-8dd7-41f9-8240-7d34149b0f58",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "PIN is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84e7ed46-dacc-4e4e-a6ca-ab03fc72ba1f",
										"exec": [
											"",
											"pm.test(\"Response status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.equal(400);",
											"});",
											"",
											"pm.test(\"Response has 'hasResult' set to false\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'result' is null\", function () {",
											"    pm.expect(pm.response.json().result).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 3\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(3);",
											"});",
											"",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is an array with one element\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.an('array').that.has.lengthOf(1);",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' contains 'Transaction PIN is required'\", function () {",
											"    pm.expect(pm.response.json().validationMessages[0]).to.equal(\"Transaction PIN is required\");",
											"});",
											"",
											"pm.test(\"Response 'successful' is false\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "001bf823-9996-4cd4-a442-5745b696f7bf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "0a1ee970-3144-4043-9e1c-18e33b9dbb4c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5eadb2c-296d-40f3-8774-49829f275dfd",
										"exec": [
											"",
											"pm.test(\"Response status code is 400\", function () {",
											"  pm.expect(pm.response.code).to.equal(400);",
											"});",
											"",
											"pm.test(\"Response has 'hasResult' set to false\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'result' is null\", function () {",
											"    pm.expect(pm.response.json().result).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 2\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(2);",
											"});",
											"",
											"pm.test(\"Response 'message' is 'Invalid Transaction PIN'\", function () {",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is null\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'successful' is false\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 1003\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(1003);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is 'BANK78BP01002'\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.equal(\"BANK78BP01002\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e71c7c8c-7927-4a0b-8ef9-346106ff34cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6300\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "06137911-4b3a-4e8c-8d16-c8771e222338",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "986ef805-102a-4772-a288-6acd32d9607a",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Deposit amount is required'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"Deposit amount is required\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "483f18d2-082b-47eb-a07c-0e2b374068cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "eba538e2-31da-48cf-aa80-d756e5821698",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Amount field is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6900b1d1-e154-458b-b791-92ca396e2021",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Error converting value {null} to type 'System.Decimal'. Path 'amount', line 2, position 14.'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"Error converting value {null} to type 'System.Decimal'. Path 'amount', line 2, position 14.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a29fcc40-481d-440f-be08-31f7cb154621",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "4be49247-0858-4edc-b7cf-53f65ade4f3c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Source Account Required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "646ee3c5-86dd-4ffd-bbb7-80a7a110dd8e",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'The SourceAccountNo field is required.'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"The SourceAccountNo field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "713137e9-780b-4aca-a122-01da2a9be1bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "80060ddb-943a-4eaa-a18d-c11d5da2f660",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid savings plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3ab7dc0-a1b0-4846-8de9-bbd8697d7ce9",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Plan deposit failed No active savings plan'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Plan deposit failed No active savings plan\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f135341c-e31d-4e4b-9e81-4def1b887eb2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"9000\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "fd528923-dd56-4c85-9aab-cc27e40c3769",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "cdbf72db-b4dd-47ec-a0fc-6ebb82e07f6a"
				},
				{
					"name": "withdraw from savings plan",
					"item": [
						{
							"name": "Successful Withdrawal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff1dabd6-7050-44fc-a14b-9a463eaf0b04",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.hasResult).to.be.a('boolean');",
											"});",
											"",
											"",
											"pm.test(\"The 'result' field must exist and be an object\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('object');",
											"});",
											"",
											"pm.test(\"The 'result' field must have 'message' and 'reference' properties\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.result.message).to.exist.and.to.be.a('string');",
											"    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string');",
											"});",
											"",
											"",
											"pm.test(\"The resultType field should be a number\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.resultType).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Response has 'hasResult' set to true\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'result' is an object\", function () {",
											"    pm.expect(pm.response.json().result).to.be.an('object');",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 1\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(1);",
											"});",
											"",
											"pm.test(\"Response 'message' is null\", function () {",
											"    pm.expect(pm.response.json().message).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is null\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'successful' is true\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'result' contains 'message'\", function () {",
											"    pm.expect(pm.response.json().result).to.have.property('message');",
											"});",
											"",
											"pm.test(\"Response 'result' contains 'reference'\", function () {",
											"    pm.expect(pm.response.json().result).to.have.property('reference');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1b2212ea-97ce-41fe-88f0-04b022892425",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"5000\",\n  \"channel\": \"3\",\n  \"savingPlanId\": \"61\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://sandbox.bank78.co/savings/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "1e39c617-ff58-43f2-9da1-f098bb089eae",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity not reached",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea276224-4c53-4ff3-9b57-adb8227811c6",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Plan product does not allow immatured withdrawals'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Plan product does not allow immatured withrawals\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a31d6588-c281-4941-a8d7-b720afc6bd91",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"5\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "4d8af0a1-4799-43a2-bdc9-4e6363277dfe",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Insufficient balance for withdrawal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05159d0b-8b7d-44d6-af11-967ebb25f097",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Insufficient balance on your savings plan'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Insufficient balance on your savings plan\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 1010\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(1010);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is 'BANK78BP01009'\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.equal(\"BANK78BP01009\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f1ee8dae-91fb-4da1-b959-0dd4db338923",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"26\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "1a82cd80-c44b-4200-938d-f3106a1551f4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Withdrawal to another account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e7b9e1d-eb41-49df-9b8a-26154044e4c5",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'result' field must exist and be an object\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"The 'result' field must have 'message' and 'reference' properties\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.message).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has 'hasResult' set to true\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is an object\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 1\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is null\", function () {\r",
											"    pm.expect(pm.response.json().message).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is true\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' contains 'message'\", function () {\r",
											"    pm.expect(pm.response.json().result).to.have.property('message');\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' contains 'reference'\", function () {\r",
											"    pm.expect(pm.response.json().result).to.have.property('reference');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "45282336-cafa-45fe-b2f9-9a862b29ea2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{bussAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "143714a6-6b24-4aa8-be60-6a86fdb5865f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b50bf8d4-3e2c-469b-a767-073df42c4559",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Invalid Transaction PIN'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 1003\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(1003);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is 'BANK78BP01002'\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.equal(\"BANK78BP01002\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d5020cb8-e460-4392-b182-46de1016624d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6130\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "87765597-713c-4de9-b4be-624489e3d588",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Pin is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1cf14c57-ec2b-4e87-a676-d79f6144e4df",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one element\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.an('array').that.has.lengthOf(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Transaction PIN is required'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages[0]).to.equal(\"Transaction PIN is required\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d637863c-bd9d-4031-b60e-8922130cd943",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "41add7be-8e8f-4912-a2a8-588f8b4aaa8f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Amount field is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d8034625-56da-456e-9097-f5dc4e970664",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'The Amount field is required'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"The Amount field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3e2b6326-2c01-4666-82ec-b624769c03f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "3a51f166-145f-4643-be40-84698c5763ed",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d5d2e70-5b25-4a3b-8d15-cd9d56220394",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"The amount specified must be greater than 0\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"The amount specified must be greater than 0\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "95e80b77-64f0-4e52-9453-cbe4679f9733",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "fb95ae37-cdd4-4891-aa8a-d4e31d8c2a1a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid savings plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c496a0d9-bf92-4317-8468-7fc64d878987",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Plan withdrawal failed No active savings plan'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Plan withdrawal failed No active savings plan\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d038bbd7-89f2-477d-a880-0d72bef9791f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"9000\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "0da744c0-eefa-49c9-a919-ddad007ac8ee",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2f1d38e-6665-4204-9b0b-7a1da2545126",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property with value 'false'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'resultType' property with value '3'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'message' property with value 'Response has validation errors'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'successful' property with value 'false'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has 'validationMessages' property which is an array\", function() {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Validation message mentions 'Credit account number should only be digits and at least 10 digits'\", function() {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"Credit account number should only be digits and at least 10 digits\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3cbc0ac4-68e7-4ac2-939f-f1a600d5609a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{1010001dfhaj}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "0165e27e-d367-4b73-97d7-cd1b3b394d1d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Account field required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ebb2667-17d9-4544-aa41-f49abe1d74cc",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' array contains 'The CreditAccountNo field is required.'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"The CreditAccountNo field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b1e2d347-cf8e-4aa0-83cf-68a5fec4d219",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "f6156a65-e3eb-400a-a756-f6d534f645f5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "2203787b-b09f-44b8-9fcb-19f308424185"
				},
				{
					"name": "View Single Plan",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "215cfbb4-39b7-4336-bcb2-e4ca367daad3",
										"exec": [
											"",
											"pm.test(\"Response has 'hasResult' set to true\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'result' is an object\", function () {",
											"    pm.expect(pm.response.json().result).to.be.an('object');",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 1\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(1);",
											"});",
											"",
											"pm.test(\"Response 'message' is null\", function () {",
											"    pm.expect(pm.response.json().message).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is null\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'successful' is true\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											"",
											"pm.test(\"Result 'accruedInterest' is a number\", function () {",
											"    pm.expect(pm.response.json().result.accruedInterest).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'daysBeforeMaturity' is a number\", function () {",
											"    pm.expect(pm.response.json().result.daysBeforeMaturity).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'frequency' is a string\", function () {",
											"    pm.expect(pm.response.json().result.frequency).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'id' is a number\", function () {",
											"    pm.expect(pm.response.json().result.id).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'userId' is a string\", function () {",
											"    pm.expect(pm.response.json().result.userId).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'hasInterest' is a boolean\", function () {",
											"    pm.expect(pm.response.json().result.hasInterest).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Result 'autoSave' is a boolean\", function () {",
											"    pm.expect(pm.response.json().result.autoSave).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Result 'frequencyId' is a number\", function () {",
											"    pm.expect(pm.response.json().result.frequencyId).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'targetAmount' is a number\", function () {",
											"    pm.expect(pm.response.json().result.targetAmount).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'planName' is a string\", function () {",
											"    pm.expect(pm.response.json().result.planName).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'sourceAccountNo' is a string\", function () {",
											"    pm.expect(pm.response.json().result.sourceAccountNo).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'sourceAccountName' is a string\", function () {",
											"    pm.expect(pm.response.json().result.sourceAccountName).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'savingsProductId' is a number\", function () {",
											"    pm.expect(pm.response.json().result.savingsProductId).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'totalSavings' is a number\", function () {",
											"    pm.expect(pm.response.json().result.totalSavings).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'isActive' is a boolean\", function () {",
											"    pm.expect(pm.response.json().result.isActive).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Result 'savingStartDate' is a string\", function () {",
											"    pm.expect(pm.response.json().result.savingStartDate).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'shouldLockSavings' is a boolean\", function () {",
											"    pm.expect(pm.response.json().result.shouldLockSavings).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Result 'lockDuration' is a number\", function () {",
											"    pm.expect(pm.response.json().result.lockDuration).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'lastWithdrawalDate' is null\", function () {",
											"    pm.expect(pm.response.json().result.lastWithdrawalDate).to.be.null;",
											"});",
											"",
											"pm.test(\"Result 'lastWithdrawalAmount' is null\", function () {",
											"    pm.expect(pm.response.json().result.lastWithdrawalAmount).to.be.null;",
											"});",
											"",
											"pm.test(\"Result 'maturityDate' is a string\", function () {",
											"    pm.expect(pm.response.json().result.maturityDate).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'savingAmount' is a number\", function () {",
											"    pm.expect(pm.response.json().result.savingAmount).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'accruedinterest' is null\", function () {",
											"    pm.expect(pm.response.json().result.accruedinterest).to.be.null;",
											"});",
											"",
											"pm.test(\"Result 'lastInterestPaidDate' is null\", function () {",
											"    pm.expect(pm.response.json().result.lastInterestPaidDate).to.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2b6cbb73-b9e2-48e5-a815-8cae62f9b96e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/26"
							},
							"response": [
								{
									"id": "a90a41af-9153-4f25-ac41-3c886265348e",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"frequencyId\": null,\n    \"maturityDays\": \"<integer>\",\n    \"planName\": \"<string>\",\n    \"referenceNumber\": \"<string>\",\n    \"savingAmount\": \"<double>\",\n    \"sourceAccountName\": \"<string>\",\n    \"sourceAccountNo\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"hasInterest\": \"<boolean>\",\n    \"autoSave\": \"<boolean>\",\n    \"targetAmount\": \"<double>\",\n    \"savingsProductId\": \"<integer>\",\n    \"totalSavings\": \"<double>\",\n    \"isActive\": \"<boolean>\",\n    \"lastSavingsAmount\": \"<double>\",\n    \"lastSavingsDate\": \"<dateTime>\",\n    \"savingStartDate\": \"<dateTime>\",\n    \"shouldLockSavings\": \"<boolean>\",\n    \"lockDuration\": \"<integer>\",\n    \"lastWithdrawalDate\": \"<dateTime>\",\n    \"lastWithdrawalAmount\": \"<double>\",\n    \"maturityDate\": \"<dateTime>\",\n    \"accruedinterest\": \"<double>\",\n    \"lastInterestPaidDate\": \"<dateTime>\",\n    \"interestIsUp\": \"<boolean>\",\n    \"accruedInterestPercentage\": \"<double>\",\n    \"nextAutoSaveDate\": \"<dateTime>\",\n    \"nextWithdrawalDate\": \"<dateTime>\",\n    \"hasMatured\": \"<boolean>\",\n    \"endedOn\": \"<dateTime>\",\n    \"accruedInterest\": \"<double>\",\n    \"frequency\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "3816dd9f-fad2-47a9-bd1a-ec74fc561681"
				},
				{
					"name": "List savings plan",
					"item": [
						{
							"name": "Get Paged",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b09eddf-a8c6-410b-bcd4-d3fb5b8a96ad",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to true\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is an object\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 1\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is null\", function () {\r",
											"    pm.expect(pm.response.json().message).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is true\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Result 'items' is an array\", function () {\r",
											"    pm.expect(pm.response.json().result.items).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Result 'total' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.total).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Result 'info' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.info).to.be.a('number');\r",
											"});\r",
											"\r",
											"// Assertions for the first item in the 'items' array\r",
											"pm.test(\"Item 1 'accruedInterest' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].accruedInterest).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'frequency' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].frequency).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'id' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].id).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'userId' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].userId).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'hasInterest' is a boolean\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].hasInterest).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'autoSave' is a boolean\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].autoSave).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'frequencyId' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].frequencyId).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'targetAmount' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].targetAmount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'planName' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].planName).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'sourceAccountNo' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].sourceAccountNo).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'sourceAccountName' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].sourceAccountName).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'savingsProductId' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].savingsProductId).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'totalSavings' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].totalSavings).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'isActive' is a boolean\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].isActive).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'lastSavingsAmount' is null\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].lastSavingsAmount).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'lastSavingsDate' is null\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].lastSavingsDate).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'savingStartDate' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].savingStartDate).to.be.a('string');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "49b40837-826f-448b-a843-3083e60e0b23",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/getpaged/1/10/%7B%7D",
								"description": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber"
							},
							"response": [
								{
									"id": "1ce9119a-b0cd-45e9-8a12-b336a63befa1",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/getpaged/:page/:pagesize/:whereCondition",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												"getpaged",
												":page",
												":pagesize",
												":whereCondition"
											],
											"variable": [
												{
													"key": "page"
												},
												{
													"key": "pagesize"
												},
												{
													"key": "whereCondition"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"items\": [\n      {\n        \"frequencyId\": null,\n        \"maturityDays\": \"<integer>\",\n        \"planName\": \"<string>\",\n        \"referenceNumber\": \"<string>\",\n        \"savingAmount\": \"<double>\",\n        \"sourceAccountName\": \"<string>\",\n        \"sourceAccountNo\": \"<string>\",\n        \"userId\": \"<string>\",\n        \"hasInterest\": \"<boolean>\",\n        \"autoSave\": \"<boolean>\",\n        \"targetAmount\": \"<double>\",\n        \"savingsProductId\": \"<integer>\",\n        \"totalSavings\": \"<double>\",\n        \"isActive\": \"<boolean>\",\n        \"lastSavingsAmount\": \"<double>\",\n        \"lastSavingsDate\": \"<dateTime>\",\n        \"savingStartDate\": \"<dateTime>\",\n        \"shouldLockSavings\": \"<boolean>\",\n        \"lockDuration\": \"<integer>\",\n        \"lastWithdrawalDate\": \"<dateTime>\",\n        \"lastWithdrawalAmount\": \"<double>\",\n        \"maturityDate\": \"<dateTime>\",\n        \"accruedinterest\": \"<double>\",\n        \"lastInterestPaidDate\": \"<dateTime>\",\n        \"interestIsUp\": \"<boolean>\",\n        \"accruedInterestPercentage\": \"<double>\",\n        \"nextAutoSaveDate\": \"<dateTime>\",\n        \"nextWithdrawalDate\": \"<dateTime>\",\n        \"hasMatured\": \"<boolean>\",\n        \"endedOn\": \"<dateTime>\",\n        \"accruedInterest\": \"<double>\",\n        \"frequency\": \"<string>\"\n      },\n      {\n        \"frequencyId\": null,\n        \"maturityDays\": \"<integer>\",\n        \"planName\": \"<string>\",\n        \"referenceNumber\": \"<string>\",\n        \"savingAmount\": \"<double>\",\n        \"sourceAccountName\": \"<string>\",\n        \"sourceAccountNo\": \"<string>\",\n        \"userId\": \"<string>\",\n        \"hasInterest\": \"<boolean>\",\n        \"autoSave\": \"<boolean>\",\n        \"targetAmount\": \"<double>\",\n        \"savingsProductId\": \"<integer>\",\n        \"totalSavings\": \"<double>\",\n        \"isActive\": \"<boolean>\",\n        \"lastSavingsAmount\": \"<double>\",\n        \"lastSavingsDate\": \"<dateTime>\",\n        \"savingStartDate\": \"<dateTime>\",\n        \"shouldLockSavings\": \"<boolean>\",\n        \"lockDuration\": \"<integer>\",\n        \"lastWithdrawalDate\": \"<dateTime>\",\n        \"lastWithdrawalAmount\": \"<double>\",\n        \"maturityDate\": \"<dateTime>\",\n        \"accruedinterest\": \"<double>\",\n        \"lastInterestPaidDate\": \"<dateTime>\",\n        \"interestIsUp\": \"<boolean>\",\n        \"accruedInterestPercentage\": \"<double>\",\n        \"nextAutoSaveDate\": \"<dateTime>\",\n        \"nextWithdrawalDate\": \"<dateTime>\",\n        \"hasMatured\": \"<boolean>\",\n        \"endedOn\": \"<dateTime>\",\n        \"accruedInterest\": \"<double>\",\n        \"frequency\": \"<string>\"\n      }\n    ],\n    \"total\": \"<integer>\",\n    \"info\": \"<double>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "8b96319e-4f8e-499b-8322-527903e7cec2"
				},
				{
					"name": "querypaged",
					"item": [
						{
							"name": "Get Paged",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fba03502-9a4c-4e08-8e52-2e74c02ef762",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate that 'hasResult' field is a boolean\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.hasResult).to.be.a('boolean');",
											"});",
											"",
											"",
											"pm.test(\"Validate the 'result' field is an array and is not empty\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result).to.be.an('array', \"'result' field should be an array\");",
											"    pm.expect(responseData.result).to.have.lengthOf.at.least(1, \"'result' array should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9961fc47-9ff7-495d-986e-6e9f851d4fc9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/querypaged/1/14/%7B%7D",
								"description": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber"
							},
							"response": [
								{
									"id": "876e917f-6755-4dc5-b962-f5b71721426d",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/querypaged/:page/:pagesize/:whereCondition",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												"querypaged",
												":page",
												":pagesize",
												":whereCondition"
											],
											"variable": [
												{
													"key": "page"
												},
												{
													"key": "pagesize"
												},
												{
													"key": "whereCondition"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"frequencyId\": null,\n      \"maturityDays\": \"<integer>\",\n      \"planName\": \"<string>\",\n      \"referenceNumber\": \"<string>\",\n      \"savingAmount\": \"<double>\",\n      \"sourceAccountName\": \"<string>\",\n      \"sourceAccountNo\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"hasInterest\": \"<boolean>\",\n      \"autoSave\": \"<boolean>\",\n      \"targetAmount\": \"<double>\",\n      \"savingsProductId\": \"<integer>\",\n      \"totalSavings\": \"<double>\",\n      \"isActive\": \"<boolean>\",\n      \"lastSavingsAmount\": \"<double>\",\n      \"lastSavingsDate\": \"<dateTime>\",\n      \"savingStartDate\": \"<dateTime>\",\n      \"shouldLockSavings\": \"<boolean>\",\n      \"lockDuration\": \"<integer>\",\n      \"lastWithdrawalDate\": \"<dateTime>\",\n      \"lastWithdrawalAmount\": \"<double>\",\n      \"maturityDate\": \"<dateTime>\",\n      \"accruedinterest\": \"<double>\",\n      \"lastInterestPaidDate\": \"<dateTime>\",\n      \"interestIsUp\": \"<boolean>\",\n      \"accruedInterestPercentage\": \"<double>\",\n      \"nextAutoSaveDate\": \"<dateTime>\",\n      \"nextWithdrawalDate\": \"<dateTime>\",\n      \"hasMatured\": \"<boolean>\",\n      \"endedOn\": \"<dateTime>\",\n      \"accruedInterest\": \"<double>\",\n      \"frequency\": \"<string>\"\n    },\n    {\n      \"frequencyId\": null,\n      \"maturityDays\": \"<integer>\",\n      \"planName\": \"<string>\",\n      \"referenceNumber\": \"<string>\",\n      \"savingAmount\": \"<double>\",\n      \"sourceAccountName\": \"<string>\",\n      \"sourceAccountNo\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"hasInterest\": \"<boolean>\",\n      \"autoSave\": \"<boolean>\",\n      \"targetAmount\": \"<double>\",\n      \"savingsProductId\": \"<integer>\",\n      \"totalSavings\": \"<double>\",\n      \"isActive\": \"<boolean>\",\n      \"lastSavingsAmount\": \"<double>\",\n      \"lastSavingsDate\": \"<dateTime>\",\n      \"savingStartDate\": \"<dateTime>\",\n      \"shouldLockSavings\": \"<boolean>\",\n      \"lockDuration\": \"<integer>\",\n      \"lastWithdrawalDate\": \"<dateTime>\",\n      \"lastWithdrawalAmount\": \"<double>\",\n      \"maturityDate\": \"<dateTime>\",\n      \"accruedinterest\": \"<double>\",\n      \"lastInterestPaidDate\": \"<dateTime>\",\n      \"interestIsUp\": \"<boolean>\",\n      \"accruedInterestPercentage\": \"<double>\",\n      \"nextAutoSaveDate\": \"<dateTime>\",\n      \"nextWithdrawalDate\": \"<dateTime>\",\n      \"hasMatured\": \"<boolean>\",\n      \"endedOn\": \"<dateTime>\",\n      \"accruedInterest\": \"<double>\",\n      \"frequency\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "ecfb16c5-c3cb-4504-b0ce-ffe32aed7028"
				},
				{
					"name": "rollover",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/rollover",
							"id": "7851fef4-da41-49ec-a5f6-0c4db1a98e36",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"savingPlanId\": \"26\"\r\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/rollover"
							},
							"response": [
								{
									"id": "8d9913b0-aebf-43bb-95c7-9f42964df575",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/rollover"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "c34925de-2393-47d4-a309-a218dff9b1ef"
				},
				{
					"name": "savingsfrequencies",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/savingsfrequencies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ebe4cf14-3610-4492-9440-7cac9a69c7b4",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"The 'result' field is an array with at least one element\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result).to.be.an('array').and.to.have.lengthOf.at.least(1);",
											"});",
											"",
											"",
											"pm.test(\"Each element in the 'result' array has the required fields - id and name\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result).to.be.an('array');",
											"    responseData.result.forEach(function (element) {",
											"        pm.expect(element.id).to.exist.and.to.be.a('number');",
											"        pm.expect(element.name).to.exist.and.to.be.a('string');",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"Name field is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result[0].name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3ab8af24-efc1-4b79-addd-4adb1be7bc20",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/admin/saving-plans/savingsfrequencies"
							},
							"response": [
								{
									"id": "483f10b4-b5a4-4424-9199-f2d390d8a015",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/SavingsPlan/savingsfrequencies"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "e8d25f88-b7a8-4a2b-8548-da1238fe9132"
				},
				{
					"name": "download-report",
					"item": [
						{
							"name": "Download report",
							"id": "32da5cf9-11f9-4592-8f3e-3fd614985368",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://savings-dev.bank78.co/api/v1/admin/saving-plans/download-report",
								"description": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber"
							},
							"response": [
								{
									"id": "af468943-26a4-4414-9ac8-aa5e38200def",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/download-report?whereCondition=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												"download-report"
											],
											"query": [
												{
													"key": "whereCondition",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "53a40ad8-da33-4321-9900-5c15e54488fa"
				},
				{
					"name": "get-report-olumns",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/get-report-olumns",
							"id": "d6e03e39-0358-466a-9f23-f9a17ae6dd6c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/admin/saving-plans/get-report-olumns"
							},
							"response": [
								{
									"id": "9cc7217a-b33b-4ec5-ba61-1c60e1d8cd6a",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/SavingsPlan/get-report-olumns"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<integer>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<integer>\"\n  }\n]"
								}
							]
						}
					],
					"id": "14506457-0a0d-419d-b24f-3a79c9b3c65c"
				},
				{
					"name": "export-column",
					"item": [
						{
							"name": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber",
							"id": "74b23b72-b836-4372-ba05-4259c3c58e7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://savings-dev.bank78.co/api/SavingTransactionLog/ExportData?columns=2&whereCondition=name",
									"protocol": "https",
									"host": [
										"savings-dev",
										"bank78",
										"co"
									],
									"path": [
										"api",
										"SavingTransactionLog",
										"ExportData"
									],
									"query": [
										{
											"key": "columns",
											"value": "2"
										},
										{
											"key": "whereCondition",
											"value": "name"
										},
										{
											"key": "",
											"value": null,
											"type": "text",
											"disabled": true
										}
									]
								},
								"description": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber"
							},
							"response": [
								{
									"id": "7ba54ed2-a1d3-4bc1-91c4-ac54fbcd2dbf",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/export-column?columns=<string>&whereCondition=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												"export-column"
											],
											"query": [
												{
													"key": "columns",
													"value": "<string>"
												},
												{
													"key": "whereCondition",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "bcfeafc9-ac41-45da-8ad4-3964484c6336"
				},
				{
					"name": "RunAutoSave",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/RunAutoSave",
							"id": "46d95240-b0e9-470b-b875-5e34778d1c14",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/RunAutoSave"
							},
							"response": [
								{
									"id": "e96b8616-9f0b-4593-aa1a-38b714affaad",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/SavingsPlan/RunAutoSave"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "c5d3d9e8-53f8-4369-9f68-5f0052df96f2"
				},
				{
					"name": "Dashboard",
					"item": [
						{
							"name": "View Dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a4236adb-2706-4e31-99d7-e656ed8917e9",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Verify that 'hasResult' is true\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.hasResult).to.be.true;",
											"});",
											"",
											"",
											"pm.test(\"Total savings is a non-negative number\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.result.totalSavings).to.be.a('number').and.to.be.at.least(0);",
											"});",
											"",
											"",
											"pm.test(\"Total interest is a non-negative number\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.result).to.be.an('object');",
											"    pm.expect(responseData.result.totalInterest).to.be.a('number');",
											"    pm.expect(responseData.result.totalInterest).to.be.at.least(0);",
											"});",
											"",
											"",
											"pm.test(\"Verify that interestDelta is equal to 0\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.result).to.exist.and.to.be.an('object');",
											"  pm.expect(responseData.result.interestDelta).to.exist.and.to.equal(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "430c16df-c346-4508-b399-2a8aaad19a44",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/dashboard"
							},
							"response": [
								{
									"id": "d04eeddb-29f0-41cb-85d5-829b573d541e",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/SavingsPlan/RunAutoSave"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "4c052875-0056-4585-bf60-c26b2e055f25"
				}
			],
			"id": "6c173592-10e7-4324-8d9a-466f023ac9ec"
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "username",
					"item": [
						{
							"name": "{username}",
							"item": [
								{
									"name": "/api/account/username/:username",
									"id": "d3bcd446-d9f3-4a15-8245-ecd9ef1b78e7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/account/username/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"account",
												"username",
												":username"
											],
											"variable": [
												{
													"id": "0242c917-e3c8-49e3-8f6c-5b46f7f3aa23",
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"id": "c0d9a12f-ae0d-4acd-8131-ee578fc0e11e",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/username/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"username",
														":username"
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"userName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"accountType\": \"<string>\",\n      \"currencyCode\": \"<string>\",\n      \"cardLimit\": \"<double>\",\n      \"customerId\": \"<integer>\",\n      \"businessId\": \"<integer>\",\n      \"customer\": {\n        \"id\": \"<integer>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"referralCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"previousNames\": \"<string>\",\n        \"meansOfId\": \"DriversLicense\",\n        \"dateOfBirth\": \"<string>\",\n        \"idNumber\": \"<string>\",\n        \"securityQuestion1\": \"<string>\",\n        \"securityAnswer1\": \"<string>\",\n        \"securityQuestion2\": \"<string>\",\n        \"securityAnswer2\": \"<string>\",\n        \"phoneNumberVerfiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"useKYCLevelLimit\": \"<boolean>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"income\": \"<double>\",\n        \"idFile\": \"<string>\",\n        \"proofOfAddressFile\": \"<string>\",\n        \"bankStatementFile\": \"<string>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level2Rejected\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"active\": \"<boolean>\",\n        \"status\": \"Phone_Verification_Pending\",\n        \"accounts\": [\n          {\n            \"id\": \"<integer>\",\n            \"userName\": \"<string>\",\n            \"accountNumber\": \"<string>\",\n            \"accountType\": \"<string>\",\n            \"currencyCode\": \"<string>\",\n            \"cardLimit\": \"<double>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"rcBnNumber\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"tin\": \"<string>\",\n              \"hasDirectors\": \"<boolean>\",\n              \"hasShareHolders\": \"<boolean>\",\n              \"hasBenficialOwners\": \"<boolean>\",\n              \"natureOfBusiness\": \"<string>\",\n              \"sourceOfRevenue\": \"<string>\",\n              \"sourceOfCapital\": \"<string>\",\n              \"taxCompliance\": \"<boolean>\",\n              \"evidenceOfCorporateGovernance\": \"<boolean>\",\n              \"dailyDeposit\": \"<double>\",\n              \"dailyTransfer\": \"<double>\",\n              \"lifetimeDeposit\": \"<double>\",\n              \"limitTransfer\": \"<double>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"status\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"customerNumber\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level2Rejected\",\n              \"kycApprovedBy\": \"<string>\",\n              \"kycApprovedDate\": \"<dateTime>\",\n              \"blackListed\": \"<boolean>\",\n              \"accounts\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                }\n              ],\n              \"customerRelationships\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"stakeholders\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"userBusinesses\": [\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                },\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                }\n              ],\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"userName\": \"<string>\",\n            \"accountNumber\": \"<string>\",\n            \"accountType\": \"<string>\",\n            \"currencyCode\": \"<string>\",\n            \"cardLimit\": \"<double>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"rcBnNumber\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"tin\": \"<string>\",\n              \"hasDirectors\": \"<boolean>\",\n              \"hasShareHolders\": \"<boolean>\",\n              \"hasBenficialOwners\": \"<boolean>\",\n              \"natureOfBusiness\": \"<string>\",\n              \"sourceOfRevenue\": \"<string>\",\n              \"sourceOfCapital\": \"<string>\",\n              \"taxCompliance\": \"<boolean>\",\n              \"evidenceOfCorporateGovernance\": \"<boolean>\",\n              \"dailyDeposit\": \"<double>\",\n              \"dailyTransfer\": \"<double>\",\n              \"lifetimeDeposit\": \"<double>\",\n              \"limitTransfer\": \"<double>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"status\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"customerNumber\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level1Approved\",\n              \"kycApprovedBy\": \"<string>\",\n              \"kycApprovedDate\": \"<dateTime>\",\n              \"blackListed\": \"<boolean>\",\n              \"accounts\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                }\n              ],\n              \"customerRelationships\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"stakeholders\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"userBusinesses\": [\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                },\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                }\n              ],\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"businessRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userId\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"blacklisted\": \"<boolean>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      \"business\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"email\": \"<string>\",\n        \"rcBnNumber\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"tin\": \"<string>\",\n        \"hasDirectors\": \"<boolean>\",\n        \"hasShareHolders\": \"<boolean>\",\n        \"hasBenficialOwners\": \"<boolean>\",\n        \"natureOfBusiness\": \"<string>\",\n        \"sourceOfRevenue\": \"<string>\",\n        \"sourceOfCapital\": \"<string>\",\n        \"taxCompliance\": \"<boolean>\",\n        \"evidenceOfCorporateGovernance\": \"<boolean>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"status\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Pending\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"blackListed\": \"<boolean>\",\n        \"accounts\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          }\n        ],\n        \"customerRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"stakeholders\": [\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"<string>\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerfiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"<string>\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerfiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userBusinesses\": [\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          },\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          }\n        ],\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    },\n    {\n      \"userName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"accountType\": \"<string>\",\n      \"currencyCode\": \"<string>\",\n      \"cardLimit\": \"<double>\",\n      \"customerId\": \"<integer>\",\n      \"businessId\": \"<integer>\",\n      \"customer\": {\n        \"id\": \"<integer>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"referralCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"previousNames\": \"<string>\",\n        \"meansOfId\": \"Vnin\",\n        \"dateOfBirth\": \"<string>\",\n        \"idNumber\": \"<string>\",\n        \"securityQuestion1\": \"<string>\",\n        \"securityAnswer1\": \"<string>\",\n        \"securityQuestion2\": \"<string>\",\n        \"securityAnswer2\": \"<string>\",\n        \"phoneNumberVerfiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"useKYCLevelLimit\": \"<boolean>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"income\": \"<double>\",\n        \"idFile\": \"<string>\",\n        \"proofOfAddressFile\": \"<string>\",\n        \"bankStatementFile\": \"<string>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level2Rejected\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"active\": \"<boolean>\",\n        \"status\": \"KYC_Verification_Complete\",\n        \"accounts\": [\n          {\n            \"id\": \"<integer>\",\n            \"userName\": \"<string>\",\n            \"accountNumber\": \"<string>\",\n            \"accountType\": \"<string>\",\n            \"currencyCode\": \"<string>\",\n            \"cardLimit\": \"<double>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"rcBnNumber\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"tin\": \"<string>\",\n              \"hasDirectors\": \"<boolean>\",\n              \"hasShareHolders\": \"<boolean>\",\n              \"hasBenficialOwners\": \"<boolean>\",\n              \"natureOfBusiness\": \"<string>\",\n              \"sourceOfRevenue\": \"<string>\",\n              \"sourceOfCapital\": \"<string>\",\n              \"taxCompliance\": \"<boolean>\",\n              \"evidenceOfCorporateGovernance\": \"<boolean>\",\n              \"dailyDeposit\": \"<double>\",\n              \"dailyTransfer\": \"<double>\",\n              \"lifetimeDeposit\": \"<double>\",\n              \"limitTransfer\": \"<double>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"status\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"customerNumber\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level3Approved\",\n              \"kycApprovedBy\": \"<string>\",\n              \"kycApprovedDate\": \"<dateTime>\",\n              \"blackListed\": \"<boolean>\",\n              \"accounts\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                }\n              ],\n              \"customerRelationships\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"stakeholders\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"userBusinesses\": [\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                },\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                }\n              ],\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"userName\": \"<string>\",\n            \"accountNumber\": \"<string>\",\n            \"accountType\": \"<string>\",\n            \"currencyCode\": \"<string>\",\n            \"cardLimit\": \"<double>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"rcBnNumber\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"tin\": \"<string>\",\n              \"hasDirectors\": \"<boolean>\",\n              \"hasShareHolders\": \"<boolean>\",\n              \"hasBenficialOwners\": \"<boolean>\",\n              \"natureOfBusiness\": \"<string>\",\n              \"sourceOfRevenue\": \"<string>\",\n              \"sourceOfCapital\": \"<string>\",\n              \"taxCompliance\": \"<boolean>\",\n              \"evidenceOfCorporateGovernance\": \"<boolean>\",\n              \"dailyDeposit\": \"<double>\",\n              \"dailyTransfer\": \"<double>\",\n              \"lifetimeDeposit\": \"<double>\",\n              \"limitTransfer\": \"<double>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"status\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"customerNumber\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level3Rejected\",\n              \"kycApprovedBy\": \"<string>\",\n              \"kycApprovedDate\": \"<dateTime>\",\n              \"blackListed\": \"<boolean>\",\n              \"accounts\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                }\n              ],\n              \"customerRelationships\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"stakeholders\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"userBusinesses\": [\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                },\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                }\n              ],\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"businessRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userId\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"blacklisted\": \"<boolean>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      \"business\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"email\": \"<string>\",\n        \"rcBnNumber\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"tin\": \"<string>\",\n        \"hasDirectors\": \"<boolean>\",\n        \"hasShareHolders\": \"<boolean>\",\n        \"hasBenficialOwners\": \"<boolean>\",\n        \"natureOfBusiness\": \"<string>\",\n        \"sourceOfRevenue\": \"<string>\",\n        \"sourceOfCapital\": \"<string>\",\n        \"taxCompliance\": \"<boolean>\",\n        \"evidenceOfCorporateGovernance\": \"<boolean>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"status\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level2Rejected\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"blackListed\": \"<boolean>\",\n        \"accounts\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          }\n        ],\n        \"customerRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"stakeholders\": [\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"<string>\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerfiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"<string>\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerfiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userBusinesses\": [\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          },\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          }\n        ],\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    }\n  ],\n  \"resultType\": \"Empty\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
										}
									]
								}
							],
							"id": "7ee06fbb-2b55-4ad6-8028-d3cfd5955b82"
						}
					],
					"id": "0d3ca43e-e560-44e0-ac22-9098914cdceb"
				},
				{
					"name": "Create account",
					"item": [
						{
							"name": "Create Account - Successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "098228cc-8aed-4918-9cf1-e30ae612f406",
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Response body should Have id\", function () {\r",
											"    pm.response.to.have.jsonBody('result.id');\r",
											"});\r",
											"pm.test(\"Response body should Have walletGroupId\", function () {\r",
											"    pm.response.to.have.jsonBody('result.walletGroupId');\r",
											"});\r",
											"pm.test(\"Response body should Have customerId\", function () {\r",
											"    pm.response.to.have.jsonBody('result.customerId');\r",
											"});\r",
											"pm.test(\"Response body should Have availableBalance\", function () {\r",
											"    pm.response.to.have.jsonBody('result.availableBalance');\r",
											"});\r",
											"pm.test(\"Response body should Have ledgerBalance\", function () {\r",
											"    pm.response.to.have.jsonBody('result.ledgerBalance');\r",
											"});\r",
											"pm.test(\"Response body should Have accountNumber\", function () {\r",
											"    pm.response.to.have.jsonBody('result.virtualAccount.accountNumber');\r",
											"});\r",
											"pm.test(\"Response body should Have bankCode\", function () {\r",
											"    pm.response.to.have.jsonBody('result.virtualAccount.bankCode');\r",
											"});\r",
											"pm.test(\"Response body should Have bankName\", function () {\r",
											"    pm.response.to.have.jsonBody('result.virtualAccount.bankName');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3b78d16e-d6ce-458c-8ac0-c24d14348b59",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"Shopping\",\n  \"accountType\": \"Savings\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "495e9e2a-bd7d-47b1-adef-c6492a915c29",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Account - Invalid currency code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d14eff6-26e1-48de-891d-aef03389dec8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response body should Have validationMessages\", function () {\r",
											"    pm.response.to.have.jsonBody('validationMessages');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7b459c28-882f-4fff-b1d8-56836e4adf9b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"WWendy123\",\n  \"name\": \"Shopping\",\n  \"accountType\": \"Savings\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "4ff4d8a5-cbd6-45ed-bf11-c6bd7fe9af17",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Account - Blank currency Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2673f0aa-1dd3-4d24-93de-de51eeb8ef0a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response body should Have validationMessages\", function () {\r",
											"    pm.response.to.have.jsonBody('validationMessages');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a64e2e4e-2d5f-473b-a537-7074233d856f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"\",\n  \"name\": \"Shopping\",\n  \"accountType\": \"Savings\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "96b67542-9036-4185-bdab-b2f7958757c0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Account - Blank name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0dc0c7f-2310-48b1-874a-1f3f92ba48a8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response body should Have validationMessages\", function () {\r",
											"    pm.response.to.have.jsonBody('validationMessages');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "24267041-e8cd-4e40-b9b9-43967476cd1b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"\",\n  \"accountType\": \"Savings\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "aa18771f-3701-4484-b4c5-6c6f519b904d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Account - Blank account type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "650fcddb-0e6e-4ac3-a967-d81d60f4df00",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response body should Have validationMessages\", function () {\r",
											"    pm.response.to.have.jsonBody('validationMessages');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cf5634d8-ce40-4f4d-a376-e0f514a61872",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"Shopping\",\n  \"accountType\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "21d0e242-f618-4272-86df-57d5f538561d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "07b8925f-8f76-4204-8835-0794752984dd"
				},
				{
					"name": "Get account",
					"item": [
						{
							"name": "Get Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c45fc11-6e42-458f-aa72-74e186930f04",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.environment.set(\"bus_account\", jsonData.result.profiles[0].accounts[0].accountNumber);\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is true\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is true\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3ad378a7-9aba-4ccd-9dc4-065694a62147",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/onboard/api/user/"
							},
							"response": [
								{
									"id": "035b2104-64ee-46b3-800b-cf8edbae1fbb",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/account?accountNumber=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"account"
											],
											"query": [
												{
													"key": "accountNumber",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"userName\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"accountType\": \"<string>\",\n    \"currencyCode\": \"<string>\",\n    \"cardLimit\": \"<double>\",\n    \"customerId\": \"<integer>\",\n    \"businessId\": \"<integer>\",\n    \"customer\": {\n      \"id\": \"<integer>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"referralCode\": \"<string>\",\n      \"financialId\": \"<string>\",\n      \"financialIdType\": \"BVN\",\n      \"profileImage\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"previousNames\": \"<string>\",\n      \"meansOfId\": \"DriversLicense\",\n      \"dateOfBirth\": \"<string>\",\n      \"idNumber\": \"<string>\",\n      \"securityQuestion1\": \"<string>\",\n      \"securityAnswer1\": \"<string>\",\n      \"securityQuestion2\": \"<string>\",\n      \"securityAnswer2\": \"<string>\",\n      \"phoneNumberVerfiedAt\": \"<dateTime>\",\n      \"emailVeriedAt\": \"<dateTime>\",\n      \"dailyDeposit\": \"<double>\",\n      \"dailyTransfer\": \"<double>\",\n      \"lifetimeDeposit\": \"<double>\",\n      \"limitTransfer\": \"<double>\",\n      \"useKYCLevelLimit\": \"<boolean>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"income\": \"<double>\",\n      \"idFile\": \"<string>\",\n      \"proofOfAddressFile\": \"<string>\",\n      \"bankStatementFile\": \"<string>\",\n      \"customerNumber\": \"<string>\",\n      \"kycLevel\": \"<string>\",\n      \"kycStatus\": \"Level1Pending\",\n      \"kycApprovedBy\": \"<string>\",\n      \"kycApprovedDate\": \"<dateTime>\",\n      \"active\": \"<boolean>\",\n      \"status\": \"Email_Verification_Pending\",\n      \"accounts\": [\n        {\n          \"id\": \"<integer>\",\n          \"userName\": \"<string>\",\n          \"accountNumber\": \"<string>\",\n          \"accountType\": \"<string>\",\n          \"currencyCode\": \"<string>\",\n          \"cardLimit\": \"<double>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"email\": \"<string>\",\n            \"rcBnNumber\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"tin\": \"<string>\",\n            \"hasDirectors\": \"<boolean>\",\n            \"hasShareHolders\": \"<boolean>\",\n            \"hasBenficialOwners\": \"<boolean>\",\n            \"natureOfBusiness\": \"<string>\",\n            \"sourceOfRevenue\": \"<string>\",\n            \"sourceOfCapital\": \"<string>\",\n            \"taxCompliance\": \"<boolean>\",\n            \"evidenceOfCorporateGovernance\": \"<boolean>\",\n            \"dailyDeposit\": \"<double>\",\n            \"dailyTransfer\": \"<double>\",\n            \"lifetimeDeposit\": \"<double>\",\n            \"limitTransfer\": \"<double>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"status\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"customerNumber\": \"<string>\",\n            \"kycLevel\": \"<string>\",\n            \"kycStatus\": \"Level2Approved\",\n            \"kycApprovedBy\": \"<string>\",\n            \"kycApprovedDate\": \"<dateTime>\",\n            \"blackListed\": \"<boolean>\",\n            \"accounts\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n              }\n            ],\n            \"customerRelationships\": [\n              {\n                \"id\": \"<integer>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              }\n            ],\n            \"stakeholders\": [\n              {\n                \"id\": \"<integer>\",\n                \"rcBnNumber\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCountryCode\": \"<string>\",\n                \"countryCode\": \"<string>\",\n                \"financialId\": \"<string>\",\n                \"financialIdType\": \"<string>\",\n                \"stateProvince\": \"<string>\",\n                \"city\": \"<string>\",\n                \"streetAddress1\": \"<string>\",\n                \"streetAddress2\": \"<string>\",\n                \"nearestLandmark\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"stakeholderType\": \"<string>\",\n                \"ownerhipPercentage\": \"<float>\",\n                \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                \"emailVeriedAt\": \"<dateTime>\",\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"rcBnNumber\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCountryCode\": \"<string>\",\n                \"countryCode\": \"<string>\",\n                \"financialId\": \"<string>\",\n                \"financialIdType\": \"<string>\",\n                \"stateProvince\": \"<string>\",\n                \"city\": \"<string>\",\n                \"streetAddress1\": \"<string>\",\n                \"streetAddress2\": \"<string>\",\n                \"nearestLandmark\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"stakeholderType\": \"<string>\",\n                \"ownerhipPercentage\": \"<float>\",\n                \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                \"emailVeriedAt\": \"<dateTime>\",\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              }\n            ],\n            \"userBusinesses\": [\n              {\n                \"id\": \"<long>\",\n                \"userId\": \"<string>\",\n                \"user\": {\n                  \"userId\": \"<string>\",\n                  \"userName\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCode\": \"<string>\",\n                  \"referralCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                  \"emailVerifiedAt\": \"<dateTime>\",\n                  \"dateOfBirth\": \"<dateTime>\",\n                  \"hasTransactionPin\": \"<boolean>\",\n                  \"primaryProfile\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"active\": \"<boolean>\",\n                  \"blacklisted\": \"<boolean>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"userBusinesses\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    }\n                  ],\n                  \"createdBy\": \"<string>\",\n                  \"dateCreated\": \"<dateTime>\",\n                  \"updatedBy\": \"<string>\",\n                  \"lastUpdateDate\": \"<dateTime>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                }\n              },\n              {\n                \"id\": \"<long>\",\n                \"userId\": \"<string>\",\n                \"user\": {\n                  \"userId\": \"<string>\",\n                  \"userName\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCode\": \"<string>\",\n                  \"referralCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                  \"emailVerifiedAt\": \"<dateTime>\",\n                  \"dateOfBirth\": \"<dateTime>\",\n                  \"hasTransactionPin\": \"<boolean>\",\n                  \"primaryProfile\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"active\": \"<boolean>\",\n                  \"blacklisted\": \"<boolean>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"userBusinesses\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    }\n                  ],\n                  \"createdBy\": \"<string>\",\n                  \"dateCreated\": \"<dateTime>\",\n                  \"updatedBy\": \"<string>\",\n                  \"lastUpdateDate\": \"<dateTime>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                }\n              }\n            ],\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"userName\": \"<string>\",\n          \"accountNumber\": \"<string>\",\n          \"accountType\": \"<string>\",\n          \"currencyCode\": \"<string>\",\n          \"cardLimit\": \"<double>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"email\": \"<string>\",\n            \"rcBnNumber\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"tin\": \"<string>\",\n            \"hasDirectors\": \"<boolean>\",\n            \"hasShareHolders\": \"<boolean>\",\n            \"hasBenficialOwners\": \"<boolean>\",\n            \"natureOfBusiness\": \"<string>\",\n            \"sourceOfRevenue\": \"<string>\",\n            \"sourceOfCapital\": \"<string>\",\n            \"taxCompliance\": \"<boolean>\",\n            \"evidenceOfCorporateGovernance\": \"<boolean>\",\n            \"dailyDeposit\": \"<double>\",\n            \"dailyTransfer\": \"<double>\",\n            \"lifetimeDeposit\": \"<double>\",\n            \"limitTransfer\": \"<double>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"status\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"customerNumber\": \"<string>\",\n            \"kycLevel\": \"<string>\",\n            \"kycStatus\": \"Level3Approved\",\n            \"kycApprovedBy\": \"<string>\",\n            \"kycApprovedDate\": \"<dateTime>\",\n            \"blackListed\": \"<boolean>\",\n            \"accounts\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n              }\n            ],\n            \"customerRelationships\": [\n              {\n                \"id\": \"<integer>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              }\n            ],\n            \"stakeholders\": [\n              {\n                \"id\": \"<integer>\",\n                \"rcBnNumber\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCountryCode\": \"<string>\",\n                \"countryCode\": \"<string>\",\n                \"financialId\": \"<string>\",\n                \"financialIdType\": \"<string>\",\n                \"stateProvince\": \"<string>\",\n                \"city\": \"<string>\",\n                \"streetAddress1\": \"<string>\",\n                \"streetAddress2\": \"<string>\",\n                \"nearestLandmark\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"stakeholderType\": \"<string>\",\n                \"ownerhipPercentage\": \"<float>\",\n                \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                \"emailVeriedAt\": \"<dateTime>\",\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"rcBnNumber\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCountryCode\": \"<string>\",\n                \"countryCode\": \"<string>\",\n                \"financialId\": \"<string>\",\n                \"financialIdType\": \"<string>\",\n                \"stateProvince\": \"<string>\",\n                \"city\": \"<string>\",\n                \"streetAddress1\": \"<string>\",\n                \"streetAddress2\": \"<string>\",\n                \"nearestLandmark\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"stakeholderType\": \"<string>\",\n                \"ownerhipPercentage\": \"<float>\",\n                \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                \"emailVeriedAt\": \"<dateTime>\",\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              }\n            ],\n            \"userBusinesses\": [\n              {\n                \"id\": \"<long>\",\n                \"userId\": \"<string>\",\n                \"user\": {\n                  \"userId\": \"<string>\",\n                  \"userName\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCode\": \"<string>\",\n                  \"referralCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                  \"emailVerifiedAt\": \"<dateTime>\",\n                  \"dateOfBirth\": \"<dateTime>\",\n                  \"hasTransactionPin\": \"<boolean>\",\n                  \"primaryProfile\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"active\": \"<boolean>\",\n                  \"blacklisted\": \"<boolean>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"userBusinesses\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    }\n                  ],\n                  \"createdBy\": \"<string>\",\n                  \"dateCreated\": \"<dateTime>\",\n                  \"updatedBy\": \"<string>\",\n                  \"lastUpdateDate\": \"<dateTime>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                }\n              },\n              {\n                \"id\": \"<long>\",\n                \"userId\": \"<string>\",\n                \"user\": {\n                  \"userId\": \"<string>\",\n                  \"userName\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCode\": \"<string>\",\n                  \"referralCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                  \"emailVerifiedAt\": \"<dateTime>\",\n                  \"dateOfBirth\": \"<dateTime>\",\n                  \"hasTransactionPin\": \"<boolean>\",\n                  \"primaryProfile\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"active\": \"<boolean>\",\n                  \"blacklisted\": \"<boolean>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"userBusinesses\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    }\n                  ],\n                  \"createdBy\": \"<string>\",\n                  \"dateCreated\": \"<dateTime>\",\n                  \"updatedBy\": \"<string>\",\n                  \"lastUpdateDate\": \"<dateTime>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                }\n              }\n            ],\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"businessRelationships\": [\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"userId\": \"<string>\",\n      \"stateOfOrigin\": \"<string>\",\n      \"lgaOfOrigin\": \"<string>\",\n      \"nationality\": \"<string>\",\n      \"livenesssPhoto\": \"<string>\",\n      \"photoOnMeansOfId\": \"<string>\",\n      \"photoOnBVN\": \"<string>\",\n      \"bvnLinkedNin\": \"<string>\",\n      \"blacklisted\": \"<boolean>\",\n      \"user\": {\n        \"userId\": \"<string>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCode\": \"<string>\",\n        \"referralCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVerifiedAt\": \"<dateTime>\",\n        \"dateOfBirth\": \"<dateTime>\",\n        \"hasTransactionPin\": \"<boolean>\",\n        \"primaryProfile\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"blacklisted\": \"<boolean>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"userBusinesses\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n          }\n        ],\n        \"createdBy\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"lastUpdateDate\": \"<dateTime>\"\n      },\n      \"dateCreated\": \"<dateTime>\",\n      \"lastUpdatedOn\": \"<dateTime>\",\n      \"createdBy\": \"<string>\",\n      \"lastUpdatedBy\": \"<string>\"\n    },\n    \"business\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"rcBnNumber\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"tin\": \"<string>\",\n      \"hasDirectors\": \"<boolean>\",\n      \"hasShareHolders\": \"<boolean>\",\n      \"hasBenficialOwners\": \"<boolean>\",\n      \"natureOfBusiness\": \"<string>\",\n      \"sourceOfRevenue\": \"<string>\",\n      \"sourceOfCapital\": \"<string>\",\n      \"taxCompliance\": \"<boolean>\",\n      \"evidenceOfCorporateGovernance\": \"<boolean>\",\n      \"dailyDeposit\": \"<double>\",\n      \"dailyTransfer\": \"<double>\",\n      \"lifetimeDeposit\": \"<double>\",\n      \"limitTransfer\": \"<double>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"status\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"customerNumber\": \"<string>\",\n      \"kycLevel\": \"<string>\",\n      \"kycStatus\": \"Level3Pending\",\n      \"kycApprovedBy\": \"<string>\",\n      \"kycApprovedDate\": \"<dateTime>\",\n      \"blackListed\": \"<boolean>\",\n      \"accounts\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        }\n      ],\n      \"customerRelationships\": [\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"stakeholders\": [\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"<string>\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"<string>\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerfiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"<string>\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"<string>\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerfiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"userBusinesses\": [\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        },\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        }\n      ],\n      \"dateCreated\": \"<dateTime>\",\n      \"lastUpdatedOn\": \"<dateTime>\",\n      \"createdBy\": \"<string>\",\n      \"lastUpdatedBy\": \"<string>\"\n    }\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "e7bbb596-f36a-4fd8-ab31-157db1bec29d"
				}
			],
			"id": "889db899-0396-42cd-b473-c5d569c0858a"
		},
		{
			"name": "Account Termination",
			"item": [
				{
					"name": "New Request",
					"id": "f86c857c-d893-4dab-ba50-59225c3ce940",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			],
			"id": "ab392039-397a-4fbf-85c7-3775f54ba5fc"
		},
		{
			"name": "Close Account",
			"item": [
				{
					"name": "Close Account - Account with no funds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8ebab3a-afd7-4447-9575-ee414cafd731",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Ok\", function () {\r",
									"    pm.response.to.have.status('OK');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response body properties\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
									"    pm.expect(jsonData.result).to.be.an('object');\r",
									"    pm.expect(jsonData.resultType).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"    pm.expect(jsonData.validationMessages).to.be.null;\r",
									"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
									"    pm.expect(jsonData.responseCode).to.be.null;\r",
									"});\r",
									"\r",
									"pm.test(\"hasResult is True\", function () {\r",
									"    pm.expect(jsonData.hasResult).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Status is closed\", function () {\r",
									"    pm.expect(jsonData.result.status).to.eql(\"Closed\");\r",
									"});\r",
									"\r",
									"pm.test(\"resultType is Success\", function () {\r",
									"    pm.expect(jsonData.resultType).to.eql(\"Success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Message is Success\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Successful is true\", function () {\r",
									"    pm.expect(jsonData.successful).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ff5b30a1-3fe7-4371-ada2-c64105778a69",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{customer_access_token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/onboard/api/account/close?accountNumber={{customer_acctNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"onboard",
								"api",
								"account",
								"close"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": "{{customer_acctNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Close Account - Deleted account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8ebab3a-afd7-4447-9575-ee414cafd731",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response body properties\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
									"    pm.expect(jsonData.result).to.be.null;\r",
									"    pm.expect(jsonData.resultType).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"    pm.expect(jsonData.validationMessages).to.be.null;\r",
									"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
									"    pm.expect(jsonData.responseCode).to.be.null;\r",
									"});\r",
									"\r",
									"pm.test(\"hasResult is False\", function () {\r",
									"    pm.expect(jsonData.hasResult).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"resultType is Error\", function () {\r",
									"    pm.expect(jsonData.resultType).to.eql(\"Error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Account was already Closed\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Account was already Closed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Successful is false\", function () {\r",
									"    pm.expect(jsonData.successful).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9b46ed46-5ed5-492a-af0c-1ac56aa3f7e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{customer_access_token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/onboard/api/account/close?accountNumber={{customer_acctNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"onboard",
								"api",
								"account",
								"close"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": "{{customer_acctNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Close Account - Invalid account number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8ebab3a-afd7-4447-9575-ee414cafd731",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Not Found\", function () {\r",
									"    pm.response.to.have.status('Not Found');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response body properties\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
									"    pm.expect(jsonData.result).to.be.null;\r",
									"    pm.expect(jsonData.resultType).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"    pm.expect(jsonData.validationMessages).to.be.null;\r",
									"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
									"    pm.expect(jsonData.responseCode).to.be.null;\r",
									"});\r",
									"\r",
									"pm.test(\"hasResult is False\", function () {\r",
									"    pm.expect(jsonData.hasResult).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"resultType is Error\", function () {\r",
									"    pm.expect(jsonData.resultType).to.eql(\"Error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Account does not Exist\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Account does not Exist\");\r",
									"});\r",
									"\r",
									"pm.test(\"Successful is false\", function () {\r",
									"    pm.expect(jsonData.successful).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "59724303-a921-4284-ba38-da40e9db59f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{customer_access_token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/onboard/api/account/close?accountNumber=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"onboard",
								"api",
								"account",
								"close"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Close Account - Account with no funds Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8ebab3a-afd7-4447-9575-ee414cafd731",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response body properties\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
									"    pm.expect(jsonData.result).to.be.null;\r",
									"    pm.expect(jsonData.resultType).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"    pm.expect(jsonData.validationMessages).to.be.null;\r",
									"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
									"    pm.expect(jsonData.responseCode).to.be.null;\r",
									"});\r",
									"\r",
									"pm.test(\"hasResult is False\", function () {\r",
									"    pm.expect(jsonData.hasResult).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"resultType is Error\", function () {\r",
									"    pm.expect(jsonData.resultType).to.eql(\"Error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Message is Customer currently has Available Balance\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Customer currently has Available Balance\");\r",
									"});\r",
									"\r",
									"pm.test(\"Successful is false\", function () {\r",
									"    pm.expect(jsonData.successful).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "33b2742d-a566-4f07-80e6-73df4f94aaa6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{customer_access_token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/onboard/api/account/close?accountNumber=1010002178",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"onboard",
								"api",
								"account",
								"close"
							],
							"query": [
								{
									"key": "accountNumber",
									"value": "1010002178"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "75c04f9e-e8f3-4ce0-ba7f-9428b803ebea"
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "firstname",
			"value": ""
		},
		{
			"key": "userName",
			"value": ""
		}
	]
}